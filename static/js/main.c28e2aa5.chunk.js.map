{"version":3,"sources":["Helper/Helper.js","App.js","reportWebVitals.js","index.js"],"names":["comparePrice","a","b","genreA","price","genreB","comparison","compareOriginCode","origin_code","toUpperCase","compareDestinationCode","destination_code","returnMyCityName","code","makeDateMonthInEnglish","date_passed","getMonth","getMyDay","day","getDate","getMyMonth","month","getMyYear","getFullYear","getMyHour","getHours","getMyMinute","getMinutes","getMyTimeOfDay","groupMeByOrigin","indexOf","getMyFirstTuesday","date","dayOfWeek","resultDate","Date","getTime","setDate","getDay","getMySecondTuesday","saleFareHeaders","saleDetailsHeaders","city_caps_conversion","AVFM_name","Airport_Code","City_Name","App","props","formatMyDateForCSV","moment","format","generateMySaleFaresCSV","allfares","sale_start","state","sale_start_date_string","replace","setState","mycsvfilename","console","log","map","item","temp_array","push","name","fare_type","origin_city","destination_city","fare_class_code","filed_fare","taxes","shortened_region","round_trip","JSON","stringify","generateMySaleDetailsCSV","mycsvsaledetailsfilename","sale_start_date","sale_type","sale_objective","sale_end_date","travel_start_others","travel_end_others","travel_start_costa_rica","travel_end_costa_rica","travel_start_mexico","travel_end_mexico","travel_start_alaska_to_from_hawaii","travel_end_alaska_to_from_hawaii","blackout_start_others","blackout_end_others","number_of_distinct_od","advance_purchase","lowest_price_sea","lowest_price_pdx","lowest_price_bay","lowest_price_la","lowest_price_no_pdc","changeHiddenSheet","e","hidden_sheet","target","value","cleanFile","array","xml_response","newCleanArray","length","index","deal_set_code","children","attributes","exp_date","clean","camelCaseCity","cityname","i","myitem","mycityname","handleExceptionCodeChange","idx","evt","temp_code","match","newShareholders","exceptions","sidx","code_origin","code_destination","handleExceptionTravelValid","travel_valid","handleExceptionServiceBegins","temp_string","service_begins","begins_string","handleExceptionServiceEnds","service_ends","ends_string","handleAddException","concat","handleRemoveException","filter","s","resetOutputVariable","xmloutput","travelFromToUSHandler","travel_from_to_us","travel_from_to_us_string","travelByToUSHandler","travel_by_to_us","travel_by_to_us_string","daysAvailabilityToUSHandler","days_availability_to_us","travelFromWithinAlaskaHandler","travel_from_within_alaska","travel_from_within_alaska_string","travelByWithinAlaskaHandler","travel_by_within_alaska","travel_by_within_alaska_string","daysAvailabilityWithinAlaskaHandler","days_availability_within_alaska","selectedOption","club49_sheet","copied","all_my_fares","default_markets","combined_saver_and_main","pulled_exception_fares","firstinput","sale_end_date_string","travel_start_alaska_to_from_hawaii_string","travel_start_hawaii","travel_start_hawaii_string","travel_start_mexico_string","travel_start_costa_rica_string","travel_start_florida","travel_start_florida_string","travel_start_others_string","proposed_from_clu49","proposed_from_clu49_string","proposed_to_clu49","proposed_to_clu49_string","travel_end_alaska_to_from_hawaii_string","travel_end_hawaii","travel_end_hawaii_string","travel_end_mexico_string","travel_end_costa_rica_string","travel_end_florida","travel_end_florida_string","travel_end_others_string","days_availability_hawaii","days_availability_mexico","days_availability_costa_rica","days_availability_to_florida","days_availability_from_florida","days_availability_others","proposed_start_pae","proposed_start_pae_string","proposed_end_pae","proposed_end_pae_string","proposed_start_hawaii","proposed_start_hawaii_string","proposed_end_hawaii","proposed_end_hawaii_string","proposed_start_others","proposed_start_others_string","proposed_end_others","proposed_end_others_string","blackout_start_alaska_to_from_hawaii","blackout_start_alaska_to_from_hawaii_string","blackout_end_alaska_to_from_hawaii","blackout_end_alaska_to_from_hawaii_string","blackout_start_to_hawaii","blackout_start_to_hawaii_string","blackout_end_to_hawaii","blackout_end_to_hawaii_string","blackout_start_from_hawaii","blackout_start_from_hawaii_string","blackout_end_from_hawaii","blackout_end_from_hawaii_string","blackout_start_mexico","blackout_start_mexico_string","blackout_end_mexico","blackout_end_mexico_string","blackout_start_costa_rica","blackout_start_costa_rica_string","blackout_end_costa_rica","blackout_end_costa_rica_string","blackout_start_others_string","blackout_end_others_string","showdata","displayData","postVal","textareaedit","onFileChange","bind","saveDefaultMarkets","grabDefaultsFromSheet","updateFirstInput","createSaleDetails","saleStartDateHandler","saleEndDateHandler","advancePurchaseHandler","travelStartAlaskaToFromHawaiiDateHandler","travelStartHawaiiHandler","travelStartMexicoHandler","travelStartCostaRicaHandler","travelStartOthersHandler","travelEndAlaskaToFromHawaiiDateHandler","travelEndHawaiiHandler","travelEndMexicoHandler","travelEndCostaRicaHandler","travelEndOthersHandler","daysAvailabilityHawaiiHandler","daysAvailabilityMexicoHandler","daysAvailabilityCostaRicaHandler","daysAvailabilityToFloridaHandler","daysAvailabilityFromFloridaHandler","daysAvailabilityOthersHandler","proposedStartDateHawaiiHandler","proposedEndDateHawaiiHandler","proposedStartDateOthersHandler","proposedEndDateOthersHandler","blackoutStartDateAlaskaToFromHawaiiHandler","blackoutEndDateAlaskaToFromHawaiiHandler","blackoutStartDateToHawaiiHandler","blackoutEndDateToHawaiiHandler","blackoutStartDateFromHawaiiHandler","blackoutEndDateFromHawaiiHandler","blackoutStartDateMexicoHandler","blackoutEndDateMexicoHandler","blackoutStartDateCostaRicaHandler","blackoutEndDateCostaRicaHandler","blackoutStartDateOthersHandler","blackoutEndDateOthersHandler","this","def_market","array_all_combined_prices","some","default","temp_val","new_defaults","split","split_market_and_price","default_market","default_price","myobj","markAsDefault","pair","combined_array","exceptions_array","exception_test","club49deals","what_combined_fares_to_make_xml_for","array_counter_upper","array_counter_lower","myitem2","doc","builder","create","encoding","att","com","start_date","end_date","travel_start","travel_end","days_availability","fares_layer","ele","up","item2","element","toString","pretty","black_out_date_sentence","d_type","f_type","what_exception_fares_to_make_xml_for","service_begin_sentence","service_ends_sentence","newPulledExceptionFares","slice","newAllMyFares","newAllMyExceptions","createMyXml","item1","index1","index2","splice","days_available","service_start_string","service_end_string","array_all_exceptions","theitem","myindex","moveExceptionsOut","preventDefault","combined_club_49","verifyThatExceptionsIsNotEmpty","file","split_name","myfilename","files","substring","trim","file_name","readXlsxFile","sheet","then","data","index_of_travel_from_to_us","index_of_travel_from_within_alaska","index_of_travel_by_to_us","index_of_travel_by_within_alaska","temp_string_start","temp_string_end","temp_blackout_start_date","temp_blackout_start_date_string","temp_blackout_end_date","temp_blackout_end_date_string","alert","sheet_name","my_fare_type","mygroup","newArray","id","group","temp_arr","sort","temp_combined","temp_combined_club49","temp_string1","temp_string2","arr","resultArray","urls","itemIndex","obj","upper_lower","variationData","undefined","mergeClub49","price_types","mergeObjects","lowest_sea","lowest_pdx","lowest_bay","lowest_la","lowest_no_pdc","ascom_sheet","className","style","fontSize","fontWeight","textAlign","marginLeft","display","color","onSubmit","href","rel","type","defaultChecked","onChange","placeholder","marginTop","htmlFor","selected","rows","height","proposedStartDatePAEHandler","proposedEndDatePAEHandler","readOnly","onClick","filename","text","onCopy","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c28e2aa5.chunk.js","sourcesContent":["export function comparePrice(a, b) {\n    const genreA = a.price;\n    const genreB = b.price;\n\n    let comparison = 0;\n    if (genreA > genreB) {\n        comparison = 1;\n    } else if (genreA < genreB) {\n        comparison = -1;\n    }\n    return comparison;\n}\n\nexport function compareOriginCode(a, b) {\n    const genreA = a.origin_code.toUpperCase();\n    const genreB = b.origin_code.toUpperCase();\n\n    let comparison = 0;\n    if (genreA > genreB) {\n        comparison = 1;\n    } else if (genreA < genreB) {\n        comparison = -1;\n    }\n    return comparison;\n}\n\nexport function compareDestinationCode(a, b) {\n    const genreA = a.destination_code.toUpperCase();\n    const genreB = b.destination_code.toUpperCase();\n\n    let comparison = 0;\n    if (genreA > genreB) {\n        comparison = 1;\n    } else if (genreA < genreB) {\n        comparison = -1;\n    }\n    return comparison;\n}\n\n\n\nexport function returnMyCityName(code) {\n    return {\n        'ABQ' : 'Albuquerque',\n        'ACV' : 'Eureka',\n        'ADK' : 'Adak Island',\n        'ADQ' : 'Kodiak',\n        'AKN' : 'King Salmon',\n        'ALW' : 'Walla Walla',\n        'ANC' : 'Anchorage',\n        'ATL' : 'Atlanta',\n        'AUS' : 'Austin',\n        'BET' : 'Bethel',\n        'BIL' : 'Billings',\n        'BLI' : 'Bellingham',\n        'BNA' : 'Nashville',\n        'BOI' : 'Boise',\n        'BOS' : 'Boston',\n        'BRW' : 'Barrow',\n        'BUR' : 'Burbank',\n        'BWI' : 'Baltimore',\n        'BZN' : 'Bozeman',\n        'CDV' : 'Cordova',\n        'CHS' : 'Charleston',\n        'COS' : 'Colorado Springs',\n        'CUN' : 'Cancun',\n        'DCA' : 'Washington - Reagan',\n        'DEN' : 'Denver',\n        'DFW' : 'Dallas',\n        'DLG' : 'Dillingham',\n        'DTW' : 'Detroit',\n        'DUT' : 'Dutch Harbor',\n        'EAT' : 'Wenatchee',\n        'EUG' : 'Eugene',\n        'EWR' : 'New York - Newark',\n        'FAI' : 'Fairbanks',\n        'FAT' : 'Fresno',\n        'FCA' : 'Kalispell',\n        'FLG' : 'Flagstaff',\n        'FLL' : 'Ft Lauderdale',\n        'GDL' : 'Guadalajara',\n        'GEG' : 'Spokane',\n        'GTF' : 'Great Falls',\n        'GUC' : 'Gunnison County / Crested Butte',\n        'HDN' : 'Steamboat Springs',\n        'HLN' : 'Helena',\n        'HNL' : 'Honolulu',\n        'IAH' : 'Houston',\n        'IDA' : 'Idaho Falls',\n        'JFK' : 'New York - JFK',\n        'JNU' : 'Juneau',\n        'KOA' : 'Kona',\n        'KTN' : 'Ketchikan',\n        'LAP' : 'La Paz',\n        'LAS' : 'Las Vegas',\n        'LAX' : 'Los Angeles',\n        'LGB' : 'Long Beach',\n        'LIH' : 'Kauai',\n        'LIR' : 'Liberia, Costa Rica',\n        'LTO' : 'Loreto',\n        'MCI' : 'Kansas City',\n        'MCO' : 'Orlando',\n        'MEX' : 'Mexico City',\n        'MFR' : 'Medford',\n        'MIA' : 'Miami',\n        'MMH' : 'Mammoth Lakes',\n        'MRY' : 'Monterey',\n        'MSO' : 'Missoula',\n        'MSP' : 'Minneapolis',\n        'MSY' : 'New Orleans',\n        'MZT' : 'Mazatlan',\n        'OAK' : 'Oakland',\n        'OGG' : 'Maui',\n        'OKC' : 'Oklahoma City',\n        'OMA' : 'Omaha',\n        'OME' : 'Nome',\n        'ONT' : 'Ontario',\n        'ORD' : 'Chicago',\n        'OTZ' : 'Kotzebue',\n        'PDX' : 'Portland',\n        'PHL' : 'Philadelphia',\n        'PHX' : 'Phoenix',\n        'PRC' : 'Prescott',\n        'PSC' : 'Pasco',\n        'PSG' : 'Petersburg',\n        'PSP' : 'Palm Springs',\n        'PUW' : 'Pullman',\n        'PVR' : 'Puerto Vallarta',\n        'RDD' : 'Redding',\n        'RDM' : 'Redmond',\n        'RDU' : 'Raleigh-Durham',\n        'RNO' : 'Reno',\n        'SAN' : 'San Diego',\n        'SAT' : 'San Antonio',\n        'SBA' : 'Santa Barbara',\n        'SCC' : 'Prudhoe Bay',\n        'SEA' : 'Seattle',\n        'SFO' : 'San Francisco',\n        'SIT' : 'Sitka',\n        'SJC' : 'San Jose',\n        'SJD' : 'Los Cabos',\n        'SJO' : 'San Jose, Costa Rica',\n        'SLC' : 'Salt Lake City',\n        'SMF' : 'Sacramento',\n        'SNA' : 'Orange County',\n        'STL' : 'St Louis',\n        'STS' : 'Santa Rosa',\n        'SUN' : 'Sun Valley',\n        'TPA' : 'Tampa',\n        'TUS' : 'Tucson',\n        'WRG' : 'Wrangell',\n        'YAK' : 'Yakutat',\n        'YEG' : 'Edmonton',\n        'YKM' : 'Yakima',\n        'YLW' : 'Kelowna',\n        'YVR' : 'Vancouver',\n        'YYC' : 'Calgary',\n        'YYJ' : 'Victoria',\n        'ZIH' : 'Ixtapa',\n        'ZLO' : 'Manzanillo',\n        'MKE' : 'Milwaukee',\n        'HAV' : 'Havana',\n        'ICT' : 'Wichita',\n        'IND' : 'Indianapolis',\n        'SBP' : 'San Luis Obispo',\n        'DAL' : 'Dallas - Love Field',\n        'LGA' : 'New York - LaGuardia',\n        'IAD' : 'Washington D.C. - Dulles',\n        'PIT' : 'Pittsburgh',\n        'PAE' : 'Everett / Paine Field',\n        'ELP' : 'El Paso',\n        'CMH' : 'Columbus',\n    }[code]\n}\n\n\n// origin_code:data[i][0],\n// origin_city:data[i][1],\n// destination_code:data[i][2],\n// destination_city:data[i][3],\n// price:data[i][4],\n// fare_type:data[i][5],\n\nexport function mergeObjects(arr) {\n  var resultArray = [];\n  var urls = [];\n\n  for(var item in arr){\n    var itemIndex = urls.indexOf(arr[item].name);\n    if(itemIndex === -1){\n      urls.push(arr[item].name);\n      var obj = {};\n      obj.name = arr[item].name;\n      obj.origin_code = arr[item].origin_code;\n      obj.origin_city = arr[item].origin_city;\n      obj.destination_code = arr[item].destination_code;\n      obj.destination_city = arr[item].destination_city;\n      obj.default = arr[item].default;\n      obj.group = arr[item].group;\n\n      obj.price_types = [];\n      var variationData = {};\n      variationData.id = arr[item].id;\n      if(arr[item].fare_type !== undefined){\n        variationData.fare_type = arr[item].fare_type;\n      }\n      if(arr[item].price !== undefined){\n        variationData.price = arr[item].price;\n      }\n\n      if(arr[item].taxes !== undefined){\n        variationData.taxes = arr[item].taxes;\n      }\n\n\n      obj.price_types.push(variationData);\n      resultArray.push(obj);\n\n    }else{\n      variationData = {};\n      variationData.id = arr[item].id;\n      if(arr[item].fare_type !== undefined){\n        variationData.fare_type = arr[item].fare_type;\n      }\n      if(arr[item].price !== undefined){\n        variationData.price = arr[item].price;\n      }\n      resultArray[itemIndex].price_types.push(variationData)\n    }\n\n  }\n  return resultArray;\n}\n\n\nexport function makeDateMonthInEnglish(date_passed) {\n    var monthNames = [\n        \"January\", \"February\", \"March\",\n        \"April\", \"May\", \"June\", \"July\",\n        \"August\", \"September\", \"October\",\n        \"November\", \"December\"\n    ];\n\n    var monthIndex = date_passed.getMonth();\n\n    return monthNames[monthIndex];\n}\n\n\n\nexport function getMyDay(date_passed) {\n    var day = date_passed.getDate();\n    if(day < 10){\n        day = '0'+day;\n        return day;\n    }else{\n        return day;\n    }\n}\n\nexport function getMyMonth(date_passed) {\n    var month = date_passed.getMonth() + 1;\n    if(month < 10){\n        month = '0'+month;\n        return month;\n    }else{\n        return month;\n    }\n}\n\nexport function getMyYear(date_passed) {\n    var year = date_passed.getFullYear();\n    return year;\n}\n\n\nexport function getMyHour(date_passed) {\n    var hour = date_passed.getHours();\n    return hour;\n}\n\n\nexport function getMyMinute(date_passed) {\n    var minute = date_passed.getMinutes();\n    return minute;\n}\n\nexport function getMyTimeOfDay(date_passed) {\n    var hour = date_passed.getHours();\n    if (hour < 12){\n        return \"AM\";\n    }else{\n        return \"PM\";\n    }\n}\n\n\nexport function groupMeByOrigin(code) {\n    let alaska_only_codes = [\"ADK\",\"ANC\",\"BRW\",\"BET\",\"CDV\",\"DLG\",\"DUT\",\"FAI\",\"GST\",\"JNU\",\"KTN\",\"AKN\",\"ADQ\",\"OTZ\",\"OME\",\"PSG\",\"SCC\",\"SIT\",\"WRG\",\"YAK\"];\n    let hawaii_only_codes = [\"OGG\",\"LIH\",\"KOA\",\"HNL\"];\n    let florida_only_codes = [\"FLL\",\"MCO\",\"MIA\",\"TPA\"];\n    let mexico_only_codes = [\"MEX\",\"CUN\",\"GDL\",\"LTO\",\"SJD\",\"ZLO\",\"MZT\",\"PVR\",\"ZIH\"];\n    let costa_rica_only_codes = [\"LIR\",\"SJO\",\"HAV\"];\n    let pae_only_codes = [\"PAE\"];\n\n    if(alaska_only_codes.indexOf(code) > -1){\n        return \"ALASKA\";\n    }else if(hawaii_only_codes.indexOf(code) > -1){\n        return \"HAWAII\";\n    }else if(florida_only_codes.indexOf(code) > -1){\n        return \"FLORIDA\";\n    }else if(mexico_only_codes.indexOf(code) > -1){\n        return \"MEXICO\";\n    }else if(costa_rica_only_codes.indexOf(code) > -1){\n        return \"COSTA_RICA\";\n    }else if(pae_only_codes.indexOf(code) > -1){\n        return \"PAE\";\n    }else{\n        return \"OTHER_MARKET\";\n    }\n}\n\nexport function mergeClub49(arr) {\n    var resultArray = [];\n    var urls = [];\n\n    for(var item in arr){\n      var itemIndex = urls.indexOf(arr[item].group);\n      if(itemIndex === -1){\n        urls.push(arr[item].group);\n        var obj = {};\n        obj.group = arr[item].group;\n\n\n        obj.upper_lower = [];\n        var variationData = {};\n        variationData.id = arr[item].id;\n        if(arr[item].origin_code !== undefined){\n            variationData.origin_code = arr[item].origin_code;\n        }\n        if(arr[item].origin_city !== undefined){\n            variationData.origin_city = arr[item].origin_city;\n        }\n        if(arr[item].destination_code !== undefined){\n            variationData.destination_code = arr[item].destination_code;\n        }\n        if(arr[item].destination_city !== undefined){\n            variationData.destination_city = arr[item].destination_city;\n        }\n        if(arr[item].name !== undefined){\n            variationData.name = arr[item].name;\n        }\n        if(arr[item].default !== undefined){\n            variationData.default = arr[item].default;\n        }\n        if(arr[item].price !== undefined){\n        variationData.price = arr[item].price;\n        }\n\n\n        obj.upper_lower.push(variationData);\n        resultArray.push(obj);\n\n\n      }else{\n        variationData = {};\n        variationData.id = arr[item].id;\n\n        if(arr[item].origin_code !== undefined){\n          variationData.origin_code = arr[item].origin_code;\n        }\n        if(arr[item].origin_city !== undefined){\n            variationData.origin_city = arr[item].origin_city;\n        }\n        if(arr[item].destination_code !== undefined){\n            variationData.destination_code = arr[item].destination_code;\n        }\n        if(arr[item].destination_city !== undefined){\n            variationData.destination_city = arr[item].destination_city;\n        }\n        if(arr[item].name !== undefined){\n            variationData.name = arr[item].name;\n        }\n        if(arr[item].default !== undefined){\n            variationData.default = arr[item].default;\n        }\n        if(arr[item].price !== undefined){\n          variationData.price = arr[item].price;\n        }\n        resultArray[itemIndex].upper_lower.push(variationData)\n      }\n\n    }\n    return resultArray;\n  }\n\n\nexport function getMyFirstTuesday(date, dayOfWeek) {\n    var resultDate = new Date(date.getTime());\n    resultDate.setDate(date.getDate() + 7 + (7 + dayOfWeek - date.getDay()) % 7);\n    return resultDate;\n}\n\nexport function getMySecondTuesday(date, dayOfWeek) {\n    var resultDate = new Date(date.getTime());\n    resultDate.setDate(date.getDate() + 14 + (7 + dayOfWeek - date.getDay()) % 7);\n    return resultDate;\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport readXlsxFile from 'read-excel-file';\nimport builder from 'xmlbuilder';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport { comparePrice, compareOriginCode, compareDestinationCode, returnMyCityName, mergeObjects, mergeClub49, makeDateMonthInEnglish, getMyDay, getMyMonth, getMyYear, getMyHour, getMyMinute, getMyTimeOfDay, groupMeByOrigin, getMyFirstTuesday, getMySecondTuesday } from './Helper/Helper';\nimport XMLParser from 'react-xml-parser';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { AssertionError } from 'assert';\n\n\n\nconst saleFareHeaders = [\n  [\"SALE_ID\", \"SALE_DATE\", \"OD\", \"ORIG\", \"ORIG_NAME\", \"DEST\", \"DEST_NAME\", \"ADVERTISED_AMOUNT\", \"FIRST_CLASS_CODE\", \"FILED_FARE\", \"TAX\", \"REGION\", \"FARE_TYPE\", \"ROUND_TRIP\"],\n];\n\nconst saleDetailsHeaders = [\n  [\"SALE_ID\", \"LAUNCH_DATE\", \"EMAIL_FREQUENCY\", \"EMAIL_SEGMENTS\", \"PERFORMANCE_MEDIA_INPUT\", \"USER_EXPERIENCE_PROBLEMS\", \"SALE_TYPE\", \"SALE_NAME\", \"OVERLAPPING_TICKETING\", \"TICKETING_START\", \"TICKETING_END\", \"TICKETING_DAYS\", \"TRAVEL_START\", \"TRAVEL_END\", \"TRAVEL_DAYS\", \"TRAVEL_VARIATIONS\", \"COSTA_RICA_TRAVEL_START\", \"COSTA_RICA_TRAVEL_END\", \"COSTA_RICA_TRAVEL_DAYS\", \"MEXICO_TRAVEL_START\", \"MEXICO_TRAVEL_END\", \"MEXICO_TRAVEL_DAYS\",\"HAWAII_TRAVEL_START\", \"HAWAII_TRAVEL_END\", \"HAWAII_TRAVEL_DAYS\", \"BLACKOUT_DATES_FOR_CERTAIN_OD\", \"NUMBER_OF_OD\", \"SEASON_TARGET\", \"ADVANCE_PURCHASE\", \"SAVER_AVAILABLE\", \"COMBO_SALE\", \"LOWEST_PRICE_POINT_SEA\", \"LOWEST_PRICE_POINT_PDX\", \"LOWEST_PRICE_POINT_BAY\", \"LOWEST_PRICE_POINT_LA\", \"LOWEST_PRICE_POINT_ELSE\" ],\n];\n\n\nconst city_caps_conversion = [\n  {\n    AVFM_name: \"ALBUQUERQUE\",\n    Airport_Code: \"ABQ\",\n    City_Name: \"Albuquerque\"\n  },\n  {\n    AVFM_name: \"ARCATA / EUREKA\",\n    Airport_Code: \"ACV\",\n    City_Name: \"Eureka\"\n  },\n  {\n    AVFM_name: \"ADAK ISLAND\",\n    Airport_Code: \"ADK\",\n    City_Name: \"Adak Island\"\n  },\n  {\n    AVFM_name: \"KODIAK\",\n    Airport_Code: \"ADQ\",\n    City_Name: \"Kodiak\"\n  },\n  {\n    AVFM_name: \"KING SALMON\",\n    Airport_Code: \"AKN\",\n    City_Name: \"King Salmon\"\n  },\n  {\n    AVFM_name: \"WALLA WALLA\",\n    Airport_Code: \"ALW\",\n    City_Name: \"Walla Walla\"\n  },\n  {\n    AVFM_name: \"ANCHORAGE\",\n    Airport_Code: \"ANC\",\n    City_Name: \"Anchorage\"\n  },\n  {\n    AVFM_name: \"ATLANTA\",\n    Airport_Code: \"ATL\",\n    City_Name: \"Atlanta\"\n  },\n  {\n    AVFM_name: \"AUSTIN\",\n    Airport_Code: \"AUS\",\n    City_Name: \"Austin\"\n  },\n  {\n    AVFM_name: \"BETHEL\",\n    Airport_Code: \"BET\",\n    City_Name: \"Bethel\"\n  },\n  {\n    AVFM_name: \"BILLINGS\",\n    Airport_Code: \"BIL\",\n    City_Name: \"Billings\"\n  },\n  {\n    AVFM_name: \"BELLINGHAM\",\n    Airport_Code: \"BLI\",\n    City_Name: \"Bellingham\"\n  },\n  {\n    AVFM_name: \"NASHVILLE\",\n    Airport_Code: \"BNA\",\n    City_Name: \"Nashville\"\n  },\n  {\n    AVFM_name: \"BOISE\",\n    Airport_Code: \"BOI\",\n    City_Name: \"Boise\"\n  },\n  {\n    AVFM_name: \"BOSTON\",\n    Airport_Code: \"BOS\",\n    City_Name: \"Boston\"\n  },\n  {\n    AVFM_name: \"BARROW\",\n    Airport_Code: \"BRW\",\n    City_Name: \"Barrow\"\n  },\n  {\n    AVFM_name: \"BURBANK\",\n    Airport_Code: \"BUR\",\n    City_Name: \"Burbank\"\n  },\n  {\n    AVFM_name: \"BALTIMORE / WASHINGTON\",\n    Airport_Code: \"BWI\",\n    City_Name: \"Baltimore\"\n  },\n  {\n    AVFM_name: \"BOZEMAN\",\n    Airport_Code: \"BZN\",\n    City_Name: \"Bozeman\"\n  },\n  {\n    AVFM_name: \"CORDOVA\",\n    Airport_Code: \"CDV\",\n    City_Name: \"Cordova\"\n  },\n  {\n    AVFM_name: \"CHARLESTON\",\n    Airport_Code: \"CHS\",\n    City_Name: \"Charleston\"\n  },\n  {\n    AVFM_name: \"COLUMBUS\",\n    Airport_Code: \"CMH\",\n    City_Name: \"Columbus\"\n  },\n  {\n    AVFM_name: \"COLORADO SPRINGS\",\n    Airport_Code: \"COS\",\n    City_Name: \"Colorado Springs\"\n  },\n  {\n    AVFM_name: \"CANCUN\",\n    Airport_Code: \"CUN\",\n    City_Name: \"Cancun\"\n  },\n  {\n    AVFM_name: \"DALLAS / LOVE FIELD\",\n    Airport_Code: \"DAL\",\n    City_Name: \"Dallas - Love Field\"\n  },\n  {\n    AVFM_name: \"WASHINGTON, D.C. / REAGAN\",\n    Airport_Code: \"DCA\",\n    City_Name: \"Washington - Reagan\"\n  },\n  {\n    AVFM_name: \"DENVER\",\n    Airport_Code: \"DEN\",\n    City_Name: \"Denver\"\n  },\n  {\n    AVFM_name: \"DALLAS / FT. WORTH\",\n    Airport_Code: \"DFW\",\n    City_Name: \"Dallas\"\n  },\n  {\n    AVFM_name: \"DILLINGHAM\",\n    Airport_Code: \"DLG\",\n    City_Name: \"Dillingham\"\n  },\n  {\n    AVFM_name: \"DETROIT\",\n    Airport_Code: \"DTW\",\n    City_Name: \"Detroit\"\n  },\n  {\n    AVFM_name: \"DUTCH HARBOR\",\n    Airport_Code: \"DUT\",\n    City_Name: \"Dutch Harbor\"\n  },\n  {\n    AVFM_name: \"WENATCHEE\",\n    Airport_Code: \"EAT\",\n    City_Name: \"Wenatchee\"\n  },\n  {\n    AVFM_name: \"EL PASO\",\n    Airport_Code: \"ELP\",\n    City_Name: \"El Paso\"\n  },\n  {\n    AVFM_name: \"EUGENE\",\n    Airport_Code: \"EUG\",\n    City_Name: \"Eugene\"\n  },\n  {\n    AVFM_name: \"NEWARK / NEW YORK\",\n    Airport_Code: \"EWR\",\n    City_Name: \"New York - Newark\"\n  },\n  {\n    AVFM_name: \"FAIRBANKS\",\n    Airport_Code: \"FAI\",\n    City_Name: \"Fairbanks\"\n  },\n  {\n    AVFM_name: \"FRESNO / YOSEMITE\",\n    Airport_Code: \"FAT\",\n    City_Name: \"Fresno\"\n  },\n  {\n    AVFM_name: \"KALISPELL / GLACIER PARK\",\n    Airport_Code: \"FCA\",\n    City_Name: \"Kalispell\"\n  },\n  {\n    AVFM_name: \"FLAGSTAFF / SEDONA\",\n    Airport_Code: \"FLG\",\n    City_Name: \"Flagstaff\"\n  },\n  {\n    AVFM_name: \"FORT LAUDERDALE\",\n    Airport_Code: \"FLL\",\n    City_Name: \"Ft Lauderdale\"\n  },\n  {\n    AVFM_name: \"GUADALAJARA\",\n    Airport_Code: \"GDL\",\n    City_Name: \"Guadalajara\"\n  },\n  {\n    AVFM_name: \"SPOKANE\",\n    Airport_Code: \"GEG\",\n    City_Name: \"Spokane\"\n  },\n  {\n    AVFM_name: \"GUSTAVUS\",\n    Airport_Code: \"GST\",\n    City_Name: \"Gustavus\"\n  },\n  {\n    AVFM_name: \"GREAT FALLS\",\n    Airport_Code: \"GTF\",\n    City_Name: \"Great Falls\"\n  },\n  {\n    AVFM_name: \"GUNNISON / CRESTED BUTTE\",\n    Airport_Code: \"GUC\",\n    City_Name: \"Gunnison County / Crested Butte\"\n  },\n  {\n    AVFM_name: \"HAVANA\",\n    Airport_Code: \"HAV\",\n    City_Name: \"Havana\"\n  },\n  {\n    AVFM_name: \"HAYDEN / STEAMBOAT SPRINGS\",\n    Airport_Code: \"HDN\",\n    City_Name: \"Steamboat Springs\"\n  },\n  {\n    AVFM_name: \"HELENA\",\n    Airport_Code: \"HLN\",\n    City_Name: \"Helena\"\n  },\n  {\n    AVFM_name: \"HONOLULU\",\n    Airport_Code: \"HNL\",\n    City_Name: \"Honolulu\"\n  },\n  {\n    AVFM_name: \"WASHINGTON, D.C. / DULLES\",\n    Airport_Code: \"IAD\",\n    City_Name: \"Washington D.C. - Dulles\"\n  },\n  {\n    AVFM_name: \"HOUSTON\",\n    Airport_Code: \"IAH\",\n    City_Name: \"Houston\"\n  },\n  {\n    AVFM_name: \"WICHITA\",\n    Airport_Code: \"ICT\",\n    City_Name: \"Wichita\"\n  },\n  {\n    AVFM_name: \"IDAHO FALLS\",\n    Airport_Code: \"IDA\",\n    City_Name: \"Idaho Falls\"\n  },\n  {\n    AVFM_name: \"INDIANAPOLIS\",\n    Airport_Code: \"IND\",\n    City_Name: \"Indianapolis\"\n  },\n  {\n    AVFM_name: \"NEW YORK\",\n    Airport_Code: \"JFK\",\n    City_Name: \"New York - JFK\"\n  },\n  {\n    AVFM_name: \"JUNEAU\",\n    Airport_Code: \"JNU\",\n    City_Name: \"Juneau\"\n  },\n  {\n    AVFM_name: \"KONA\",\n    Airport_Code: \"KOA\",\n    City_Name: \"Kona\"\n  },\n  {\n    AVFM_name: \"KETCHIKAN\",\n    Airport_Code: \"KTN\",\n    City_Name: \"Ketchikan\"\n  },\n  {\n    AVFM_name: \"LA PAZ\",\n    Airport_Code: \"LAP\",\n    City_Name: \"La Paz\"\n  },\n  {\n    AVFM_name: \"LAS VEGAS\",\n    Airport_Code: \"LAS\",\n    City_Name: \"Las Vegas\"\n  },\n  {\n    AVFM_name: \"LOS ANGELES\",\n    Airport_Code: \"LAX\",\n    City_Name: \"Los Angeles\"\n  },\n  {\n    AVFM_name: \"NEW YORK / LAGUARDIA\",\n    Airport_Code: \"LGA\",\n    City_Name: \"New York - LaGuardia\"\n  },\n  {\n    AVFM_name: \"LONG BEACH\",\n    Airport_Code: \"LGB\",\n    City_Name: \"Long Beach\"\n  },\n  {\n    AVFM_name: \"KAUAI ISLAND\",\n    Airport_Code: \"LIH\",\n    City_Name: \"Kauai\"\n  },\n  {\n    AVFM_name: \"LIBERIA\",\n    Airport_Code: \"LIR\",\n    City_Name: \"Liberia, Costa Rica\"\n  },\n  {\n    AVFM_name: \"LORETO\",\n    Airport_Code: \"LTO\",\n    City_Name: \"Loreto\"\n  },\n  {\n    AVFM_name: \"LEWISTON\",\n    Airport_Code: \"LWS\",\n    City_Name: \"Lewiston\"\n  },\n  {\n    AVFM_name: \"KANSAS CITY\",\n    Airport_Code: \"MCI\",\n    City_Name: \"Kansas City\"\n  },\n  {\n    AVFM_name: \"ORLANDO\",\n    Airport_Code: \"MCO\",\n    City_Name: \"Orlando\"\n  },\n  {\n    AVFM_name: \"MEXICO CITY\",\n    Airport_Code: \"MEX\",\n    City_Name: \"Mexico City\"\n  },\n  {\n    AVFM_name: \"MEDFORD\",\n    Airport_Code: \"MFR\",\n    City_Name: \"Medford\"\n  },\n  {\n    AVFM_name: \"MIAMI\",\n    Airport_Code: \"MIA\",\n    City_Name: \"Miami\"\n  },\n  {\n    AVFM_name: \"MILWAUKEE\",\n    Airport_Code: \"MKE\",\n    City_Name: \"Milwaukee\"\n  },\n  {\n    AVFM_name: \"MAMMOTH / YOSEMITE\",\n    Airport_Code: \"MMH\",\n    City_Name: \"Mammoth Lakes\"\n  },\n  {\n    AVFM_name: \"MONTEREY / CARMEL\",\n    Airport_Code: \"MRY\",\n    City_Name: \"Monterey\"\n  },\n  {\n    AVFM_name: \"MISSOULA\",\n    Airport_Code: \"MSO\",\n    City_Name: \"Missoula\"\n  },\n  {\n    AVFM_name: \"MINNEAPOLIS / ST. PAUL\",\n    Airport_Code: \"MSP\",\n    City_Name: \"Minneapolis\"\n  },\n  {\n    AVFM_name: \"NEW ORLEANS\",\n    Airport_Code: \"MSY\",\n    City_Name: \"New Orleans\"\n  },\n  {\n    AVFM_name: \"MAZATLAN\",\n    Airport_Code: \"MZT\",\n    City_Name: \"Mazatlan\"\n  },\n  {\n    AVFM_name: \"OAKLAND\",\n    Airport_Code: \"OAK\",\n    City_Name: \"Oakland\"\n  },\n  {\n    AVFM_name: \"KAHULUI\",\n    Airport_Code: \"OGG\",\n    City_Name: \"Maui\"\n  },\n  {\n    AVFM_name: \"OKLAHOMA CITY\",\n    Airport_Code: \"OKC\",\n    City_Name: \"Oklahoma City\"\n  },\n  {\n    AVFM_name: \"OMAHA\",\n    Airport_Code: \"OMA\",\n    City_Name: \"Omaha\"\n  },\n  {\n    AVFM_name: \"NOME\",\n    Airport_Code: \"OME\",\n    City_Name: \"Nome\"\n  },\n  {\n    AVFM_name: \"ONTARIO\",\n    Airport_Code: \"ONT\",\n    City_Name: \"Ontario\"\n  },\n  {\n    AVFM_name: \"CHICAGO\",\n    Airport_Code: \"ORD\",\n    City_Name: \"Chicago\"\n  },\n  {\n    AVFM_name: \"KOTZEBUE\",\n    Airport_Code: \"OTZ\",\n    City_Name: \"Kotzebue\"\n  },\n  {\n    AVFM_name: \"EVERETT / PAINE FIELD\",\n    Airport_Code: \"PAE\",\n    City_Name: \"Everett / Paine Field\"\n  },\n  {\n    AVFM_name: \"PORTLAND\",\n    Airport_Code: \"PDX\",\n    City_Name: \"Portland\"\n  },\n  {\n    AVFM_name: \"PHILADELPHIA\",\n    Airport_Code: \"PHL\",\n    City_Name: \"Philadelphia\"\n  },\n  {\n    AVFM_name: \"PHOENIX\",\n    Airport_Code: \"PHX\",\n    City_Name: \"Phoenix\"\n  },\n  {\n    AVFM_name: \"PITTSBURGH\",\n    Airport_Code: \"PIT\",\n    City_Name: \"Pittsburgh\"\n  },\n  {\n    AVFM_name: \"PRESCOTT / VERDE VALLEY\",\n    Airport_Code: \"PRC\",\n    City_Name: \"Prescott\"\n  },\n  {\n    AVFM_name: \"PASCO\",\n    Airport_Code: \"PSC\",\n    City_Name: \"Pasco\"\n  },\n  {\n    AVFM_name: \"PETERSBURG\",\n    Airport_Code: \"PSG\",\n    City_Name: \"Petersburg\"\n  },\n  {\n    AVFM_name: \"PALM SPRINGS\",\n    Airport_Code: \"PSP\",\n    City_Name: \"Palm Springs\"\n  },\n  {\n    AVFM_name: \"PULLMAN / MOSCOW\",\n    Airport_Code: \"PUW\",\n    City_Name: \"Pullman\"\n  },\n  {\n    AVFM_name: \"PUERTO VALLARTA\",\n    Airport_Code: \"PVR\",\n    City_Name: \"Puerto Vallarta\"\n  },\n  {\n    AVFM_name: \"REDDING\",\n    Airport_Code: \"RDD\",\n    City_Name: \"Redding\"\n  },\n  {\n    AVFM_name: \"REDMOND / BEND\",\n    Airport_Code: \"RDM\",\n    City_Name: \"Redmond\"\n  },\n  {\n    AVFM_name: \"RALEIGH-DURHAM\",\n    Airport_Code: \"RDU\",\n    City_Name: \"Raleigh-Durham\"\n  },\n  {\n    AVFM_name: \"RENO / TAHOE\",\n    Airport_Code: \"RNO\",\n    City_Name: \"Reno\"\n  },\n  {\n    AVFM_name: \"SAN DIEGO\",\n    Airport_Code: \"SAN\",\n    City_Name: \"San Diego\"\n  },\n  {\n    AVFM_name: \"SAN ANTONIO\",\n    Airport_Code: \"SAT\",\n    City_Name: \"San Antonio\"\n  },\n  {\n    AVFM_name: \"SANTA BARBARA\",\n    Airport_Code: \"SBA\",\n    City_Name: \"Santa Barbara\"\n  },\n  {\n    AVFM_name: \"SAN LUIS OBISPO\",\n    Airport_Code: \"SBP\",\n    City_Name: \"San Luis Obispo\"\n  },\n  {\n    AVFM_name: \"PRUDHOE BAY\",\n    Airport_Code: \"SCC\",\n    City_Name: \"Prudhoe Bay\"\n  },\n  {\n    AVFM_name: \"SEATTLE\",\n    Airport_Code: \"SEA\",\n    City_Name: \"Seattle\"\n  },\n  {\n    AVFM_name: \"SAN FRANCISCO\",\n    Airport_Code: \"SFO\",\n    City_Name: \"San Francisco\"\n  },\n  {\n    AVFM_name: \"SITKA\",\n    Airport_Code: \"SIT\",\n    City_Name: \"Sitka\"\n  },\n  {\n    AVFM_name: \"SAN JOSE\",\n    Airport_Code: \"SJC\",\n    City_Name: \"San Jose\"\n  },\n  {\n    AVFM_name: \"SAN JOSE CABO\",\n    Airport_Code: \"SJD\",\n    City_Name: \"Los Cabos\"\n  },\n  {\n    AVFM_name: \"SAN JOSE COSTA RICA\",\n    Airport_Code: \"SJO\",\n    City_Name: \"San Jose, Costa Rica\"\n  },\n  {\n    AVFM_name: \"SALT LAKE CITY\",\n    Airport_Code: \"SLC\",\n    City_Name: \"Salt Lake City\"\n  },\n  {\n    AVFM_name: \"SACRAMENTO\",\n    Airport_Code: \"SMF\",\n    City_Name: \"Sacramento\"\n  },\n  {\n    AVFM_name: \"ORANGE COUNTY / JOHN WAYNE\",\n    Airport_Code: \"SNA\",\n    City_Name: \"Orange County\"\n  },\n  {\n    AVFM_name: \"ST LOUIS\",\n    Airport_Code: \"STL\",\n    City_Name: \"St Louis\"\n  },\n  {\n    AVFM_name: \"SANTA ROSA / SONOMA CO\",\n    Airport_Code: \"STS\",\n    City_Name: \"Santa Rosa\"\n  },\n  {\n    AVFM_name: \"SUN VALLEY\",\n    Airport_Code: \"SUN\",\n    City_Name: \"Sun Valley\"\n  },\n  {\n    AVFM_name: \"TAMPA\",\n    Airport_Code: \"TPA\",\n    City_Name: \"Tampa\"\n  },\n  {\n    AVFM_name: \"TUCSON\",\n    Airport_Code: \"TUS\",\n    City_Name: \"Tucson\"\n  },\n  {\n    AVFM_name: \"WRANGELL\",\n    Airport_Code: \"WRG\",\n    City_Name: \"Wrangell\"\n  },\n  {\n    AVFM_name: \"YAKUTAT\",\n    Airport_Code: \"YAK\",\n    City_Name: \"Yakutat\"\n  },\n  {\n    AVFM_name: \"EDMONTON\",\n    Airport_Code: \"YEG\",\n    City_Name: \"Edmonton\"\n  },\n  {\n    AVFM_name: \"YAKIMA\",\n    Airport_Code: \"YKM\",\n    City_Name: \"Yakima\"\n  },\n  {\n    AVFM_name: \"KELOWNA\",\n    Airport_Code: \"YLW\",\n    City_Name: \"Kelowna\"\n  },\n  {\n    AVFM_name: \"VANCOUVER\",\n    Airport_Code: \"YVR\",\n    City_Name: \"Vancouver\"\n  },\n  {\n    AVFM_name: \"CALGARY\",\n    Airport_Code: \"YYC\",\n    City_Name: \"Calgary\"\n  },\n  {\n    AVFM_name: \"VICTORIA\",\n    Airport_Code: \"YYJ\",\n    City_Name: \"Victoria\"\n  },\n  {\n    AVFM_name: \"IXTAPA/ZIHUATANEJO\",\n    Airport_Code: \"ZIH\",\n    City_Name: \"Ixtapa\"\n  },\n  {\n    AVFM_name: \"MANZANILLO\",\n    Airport_Code: \"ZLO\",\n    City_Name: \"Manzanillo\"\n  },\n  {\n    AVFM_name: \"FORT MEYERS\",\n    Airport_Code: \"RSW\",\n    City_Name: \"Fort Meyers\"\n  },\n  {\n    AVFM_name: \"COLD BAY\",\n    Airport_Code: \"CDB\",\n    City_Name: \"Cold Bay\"\n  },\n  {\n    AVFM_name: \"FORT MYERS\",\n    Airport_Code: \"RSW\",\n    City_Name: \"Fort Myers\"\n  },\n  {\n    AVFM_name: \"JACKSON HOLE\",\n    Airport_Code: \"JAC\",\n    City_Name: \"Jackson Hole\"\n  },\n\n\n ];\n\n\n\nclass App extends Component {\n\n  // handleInputChange = (event) =>{\n  //   readXlsxFile(event.files[0]).then((rows) => {\n  //     // `rows` is an array of rows\n  //     // each row being an array of cells.\n  //     console.log(rows);\n  //   })\n  // }\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      hidden_sheet : 4,\n      selectedOption:'Saver',\n      club49_sheet: false,\n      xmloutput: '',\n      copied: false,\n      all_my_fares: [],\n      default_markets: [],\n      combined_saver_and_main: [],\n      exceptions: [{ code_origin: '', code_destination: '', travel_valid: '', service_begins: null, service_ends: null, begins_string:'', ends_string:'' }],\n      pulled_exception_fares:[],\n      firstinput: 'Initial data...',\n      advance_purchase: '',\n      sale_start_date: null,\n      sale_start_date_string: '',\n      sale_end_date: null,\n      sale_end_date_string: '',\n      travel_start_alaska_to_from_hawaii: null,\n      travel_start_alaska_to_from_hawaii_string: '',\n      travel_start_hawaii: null,\n      travel_start_hawaii_string: '',\n      travel_start_mexico: null,\n      travel_start_mexico_string: '',\n      travel_start_costa_rica: null,\n      travel_start_costa_rica_string: '',\n      travel_start_florida: null,\n      travel_start_florida_string: '',\n      travel_start_others: null,\n      travel_start_others_string: '',\n\n      //Club 49 variables\n      travel_from_to_us: null,\n      travel_from_to_us_string: '',\n      travel_from_within_alaska: null,\n      travel_from_within_alaska_string: '',\n      travel_by_to_us: null,\n      travel_by_to_us_string: '',\n      travel_by_within_alaska: null,\n      travel_by_within_alaska_string: '',\n      days_availability_to_us: 'Sunday, Monday, and Tuesday',\n      days_availability_within_alaska: 'Monday through Thursday and Saturday',\n\n      proposed_from_clu49: null,\n      proposed_from_clu49_string: '',\n      proposed_to_clu49: null,\n      proposed_to_clu49_string: '',\n      //Club 49 variables\n\n\n      travel_end_alaska_to_from_hawaii: null,\n      travel_end_alaska_to_from_hawaii_string: '',\n      travel_end_hawaii: null,\n      travel_end_hawaii_string: '',\n      travel_end_mexico: null,\n      travel_end_mexico_string: '',\n      travel_end_costa_rica: null,\n      travel_end_costa_rica_string: '',\n      travel_end_florida: null,\n      travel_end_florida_string: '',\n      travel_end_others: null,\n      travel_end_others_string: '',\n\n\n\n      days_availability_hawaii: 'Mondays through Thursdays',\n      days_availability_mexico: 'Sundays through Wednesdays',\n      days_availability_costa_rica: 'Sundays through Wednesdays',\n      days_availability_to_florida: 'Mondays, Tuesdays, and Wednesdays',\n      days_availability_from_florida: 'Tuesdays, Wednesdays, and Thursdays',\n      days_availability_others: 'Tuesdays, Wednesdays, and Saturdays',\n\n\n      proposed_start_pae:null,\n      proposed_start_pae_string: '',\n      proposed_end_pae:null,\n      proposed_end_pae_string: '',\n      proposed_start_hawaii:null,\n      proposed_start_hawaii_string: '',\n      proposed_end_hawaii:null,\n      proposed_end_hawaii_string: '',\n      proposed_start_others:null,\n      proposed_start_others_string: '',\n      proposed_end_others:null,\n      proposed_end_others_string: '',\n\n\n      blackout_start_alaska_to_from_hawaii:null,\n      blackout_start_alaska_to_from_hawaii_string: '',\n      blackout_end_alaska_to_from_hawaii:null,\n      blackout_end_alaska_to_from_hawaii_string: '',\n      blackout_start_to_hawaii:null,\n      blackout_start_to_hawaii_string: '',\n      blackout_end_to_hawaii:null,\n      blackout_end_to_hawaii_string: '',\n      blackout_start_from_hawaii:null,\n      blackout_start_from_hawaii_string: '',\n      blackout_end_from_hawaii:null,\n      blackout_end_from_hawaii_string: '',\n      blackout_start_mexico:null,\n      blackout_start_mexico_string: '',\n      blackout_end_mexico:null,\n      blackout_end_mexico_string: '',\n      blackout_start_costa_rica:null,\n      blackout_start_costa_rica_string: '',\n      blackout_end_costa_rica:null,\n      blackout_end_costa_rica_string: '',\n      blackout_start_others:null,\n      blackout_start_others_string: '',\n      blackout_end_others:null,\n      blackout_end_others_string: '',\n\n      showdata : this.displayData,\n      postVal : \"\",\n      textareaedit: true,\n      sale_type: '',\n      sale_objective: ''\n    }\n\n    this.displayData = [];\n\n    this.onFileChange = this.onFileChange.bind(this);\n    // this.cleanFile = this.cleanFile.bind(this);\n\n    this.saveDefaultMarkets = this.saveDefaultMarkets.bind(this);\n    this.grabDefaultsFromSheet = this.grabDefaultsFromSheet.bind(this);\n\n    this.updateFirstInput = this.updateFirstInput.bind(this);\n\n    this.createSaleDetails = this.createSaleDetails.bind(this);\n\n    this.saleStartDateHandler = this.saleStartDateHandler.bind(this);\n    this.saleEndDateHandler = this.saleEndDateHandler.bind(this);\n    this.advancePurchaseHandler = this.advancePurchaseHandler.bind(this);\n\n\n    this.travelStartAlaskaToFromHawaiiDateHandler = this.travelStartAlaskaToFromHawaiiDateHandler.bind(this);\n    this.travelStartHawaiiHandler = this.travelStartHawaiiHandler.bind(this);\n    this.travelStartMexicoHandler = this.travelStartMexicoHandler.bind(this);\n    this.travelStartCostaRicaHandler = this.travelStartCostaRicaHandler.bind(this);\n    //this.travelStartFloridaHandler = this.travelStartFloridaHandler.bind(this);\n    this.travelStartOthersHandler = this.travelStartOthersHandler.bind(this);\n\n\n    this.travelEndAlaskaToFromHawaiiDateHandler = this.travelEndAlaskaToFromHawaiiDateHandler.bind(this);\n    this.travelEndHawaiiHandler = this.travelEndHawaiiHandler.bind(this);\n    this.travelEndMexicoHandler = this.travelEndMexicoHandler.bind(this);\n    this.travelEndCostaRicaHandler = this.travelEndCostaRicaHandler.bind(this);\n    //this.travelEndFloridaHandler = this.travelEndFloridaHandler.bind(this);\n    this.travelEndOthersHandler = this.travelEndOthersHandler.bind(this);\n\n\n    this.daysAvailabilityHawaiiHandler = this.daysAvailabilityHawaiiHandler.bind(this);\n    this.daysAvailabilityMexicoHandler = this.daysAvailabilityMexicoHandler.bind(this);\n    this.daysAvailabilityCostaRicaHandler = this.daysAvailabilityCostaRicaHandler.bind(this);\n    this.daysAvailabilityToFloridaHandler = this.daysAvailabilityToFloridaHandler.bind(this);\n    this.daysAvailabilityFromFloridaHandler = this.daysAvailabilityFromFloridaHandler.bind(this);\n    this.daysAvailabilityOthersHandler = this.daysAvailabilityOthersHandler.bind(this);\n\n\n    this.proposedStartDateHawaiiHandler = this.proposedStartDateHawaiiHandler.bind(this);\n    this.proposedEndDateHawaiiHandler = this.proposedEndDateHawaiiHandler.bind(this);\n    this.proposedStartDateOthersHandler = this.proposedStartDateOthersHandler.bind(this);\n    this.proposedEndDateOthersHandler = this.proposedEndDateOthersHandler.bind(this);\n\n\n    this.blackoutStartDateAlaskaToFromHawaiiHandler = this.blackoutStartDateAlaskaToFromHawaiiHandler.bind(this);\n    this.blackoutEndDateAlaskaToFromHawaiiHandler = this.blackoutEndDateAlaskaToFromHawaiiHandler.bind(this);\n    this.blackoutStartDateToHawaiiHandler = this.blackoutStartDateToHawaiiHandler.bind(this);\n    this.blackoutEndDateToHawaiiHandler = this.blackoutEndDateToHawaiiHandler.bind(this);\n    this.blackoutStartDateFromHawaiiHandler = this.blackoutStartDateFromHawaiiHandler.bind(this);\n    this.blackoutEndDateFromHawaiiHandler = this.blackoutEndDateFromHawaiiHandler.bind(this);\n    this.blackoutStartDateMexicoHandler = this.blackoutStartDateMexicoHandler.bind(this);\n    this.blackoutEndDateMexicoHandler = this.blackoutEndDateMexicoHandler.bind(this);\n    this.blackoutStartDateCostaRicaHandler = this.blackoutStartDateCostaRicaHandler.bind(this);\n    this.blackoutEndDateCostaRicaHandler = this.blackoutEndDateCostaRicaHandler.bind(this);\n    this.blackoutStartDateOthersHandler = this.blackoutStartDateOthersHandler.bind(this);\n    this.blackoutEndDateOthersHandler = this.blackoutEndDateOthersHandler.bind(this);\n\n\n  }\n\n  componentDidMount(){\n    // fetch('https://resource.alaskaair.net/-/media/files/deals/qa-files/qa-winter-sale')\n    // .then(response => response.text())\n    // .then((response) => {\n\n    //     var xml = new XMLParser().parseFromString(response);    // Assume xmlText contains the example XML\n\n    //     //console.log(xml);\n    //     //console.log(xml.getElementsByTagName('TravelDates'));\n    //     let deal_set_elem = xml.getElementsByTagName('DealSet');\n\n    //     this.setState({\n    //       xml_response: deal_set_elem\n    //     });\n\n\n\n    // }).catch((err) => {\n    //     console.log('fetch', err)\n    // })\n\n  }\n\n\n\n\n  updateFirstInput(e) {\n    this.setState({firstinput: e.target.value});\n  }\n\n  markAsDefault(def_market){\n\n    let array_all_combined_prices = [...this.state.combined_saver_and_main];\n\n    this.state.combined_saver_and_main.some((item) => {\n      if(def_market === item.name && item.default !== true){\n        // if(item.default === false){\n          let index = array_all_combined_prices.indexOf(item);\n          // console.log(index + \" \" + item.name);\n          if (index !== -1) {\n            item['default'] = true;\n          }\n        // }\n      }\n    });\n\n  }\n\n\n\n  saveDefaultMarkets(e) {\n\n    let temp_val = e.target.value;\n    temp_val = temp_val.split('\\n');\n\n    const new_defaults = temp_val.map((item) => {\n\n      let split_market_and_price = item.replace(/\\s/g,'');\n      split_market_and_price = split_market_and_price.match(/.{1,6}/g);\n      return {\n        default_market: split_market_and_price[0],\n        default_price: split_market_and_price[1]\n      };\n\n\n    });\n\n    //Loop through default markets array and pass each code pair to markAsDefault function to make each default fare a default market\n    new_defaults.map((myobj) => {\n      this.markAsDefault(myobj['default_market']);\n    });\n\n    this.setState({\n      default_markets: new_defaults\n    });\n\n  }\n\n\n\n\n\n  grabDefaultsFromSheet(pair, price) {\n\n    // let temp_pair = pair;\n    // let temp_price = price;\n    let new_defaults = [];\n    let temp_obj = {\n      default_market: pair,\n      default_price: price\n    }\n\n\n    //let new_defaults.push(temp_obj);\n\n\n    //Loop through default markets array and pass each code pair to markAsDefault function to make each default fare a default market\n    new_defaults.map((myobj) => {\n      this.markAsDefault(myobj['default_market']);\n    });\n\n    this.setState({\n      default_markets: new_defaults\n    });\n\n  }\n\n\n\n\n\n  saleStartDateHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n\n    this.setState({\n      sale_start_date: date,\n      sale_start_date_string: temp_string\n    });\n\n    //console.log(verifyMyAirportCode(\"SJC\"));\n\n    //console.log(\"Sale Start Date: \"+this.state.sale_start_date);\n    // console.log(\"Sale Start Date String: \"+this.state.sale_start_date_string);\n  }\n\n\n\n  saleEndDateHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      sale_end_date: date,\n      sale_end_date_string: temp_string\n    });\n  }\n\n\n  advancePurchaseHandler(e) {\n    this.setState({\n      advance_purchase: e.target.value\n    });\n  }\n\n\n  travelStartAlaskaToFromHawaiiDateHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      travel_start_alaska_to_from_hawaii: date,\n      travel_start_alaska_to_from_hawaii_string: temp_string\n    });\n  }\n  travelStartHawaiiHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      travel_start_hawaii: date,\n      travel_start_hawaii_string: temp_string\n    });\n  }\n  travelStartMexicoHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      travel_start_mexico: date,\n      travel_start_mexico_string: temp_string\n    });\n  }\n  travelStartCostaRicaHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      travel_start_costa_rica: date,\n      travel_start_costa_rica_string: temp_string\n    });\n  }\n  // travelStartFloridaHandler(date) {\n  //   this.setState({travel_start_florida: moment(date).format('YYYY-MM-DD')});\n  //   console.log(\"Travel Start Date - Florida: \"+moment(date).format('YYYY-MM-DD'));\n  // }\n  travelStartOthersHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      travel_start_others: date,\n      travel_start_others_string: temp_string,\n      travel_start_florida: date,\n      travel_start_florida_string: temp_string\n    });\n  }\n\n\n\n\n  travelEndAlaskaToFromHawaiiDateHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      travel_end_alaska_to_from_hawaii: date,\n      travel_end_alaska_to_from_hawaii_string: temp_string\n    });\n  }\n  travelEndHawaiiHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      travel_end_hawaii: date,\n      travel_end_hawaii_string: temp_string\n    });\n  }\n  travelEndMexicoHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      travel_end_mexico: date,\n      travel_end_mexico_string: temp_string\n    });\n  }\n  travelEndCostaRicaHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      travel_end_costa_rica: date,\n      travel_end_costa_rica_string: temp_string,\n    });\n  }\n  // travelEndFloridaHandler(date) {\n  //   this.setState({travel_end_florida: moment(date).format('YYYY-MM-DD')});\n  //   console.log(\"Completed Travel By - Florida: \"+moment(date).format('YYYY-MM-DD'));\n  // }\n  travelEndOthersHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      travel_end_others: date,\n      travel_end_others_string: temp_string,\n      travel_end_florida: date,\n      travel_end_florida_string: temp_string\n    });\n  }\n\n\n\n  daysAvailabilityHawaiiHandler(e) {\n    this.setState({\n      days_availability_hawaii: e.target.value\n    });\n  }\n  daysAvailabilityMexicoHandler(e) {\n    this.setState({\n      days_availability_mexico: e.target.value\n    });\n  }\n  daysAvailabilityCostaRicaHandler(e) {\n    this.setState({\n      days_availability_costa_rica: e.target.value\n    });\n  }\n  daysAvailabilityToFloridaHandler(e) {\n    this.setState({\n      days_availability_to_florida: e.target.value\n    });\n  }\n  daysAvailabilityFromFloridaHandler(e) {\n    this.setState({\n      days_availability_from_florida: e.target.value\n    });\n  }\n  daysAvailabilityOthersHandler(e) {\n    this.setState({\n      days_availability_others: e.target.value\n    });\n  }\n\n\n  proposedStartDatePAEHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      proposed_start_pae: date,\n      proposed_start_pae_string: temp_string\n    });\n  }\n  proposedEndDatePAEHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      proposed_end_pae: date,\n      proposed_end_pae_string: temp_string\n    });\n  }\n\n  proposedStartDateHawaiiHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      proposed_start_hawaii: date,\n      proposed_start_hawaii_string: temp_string\n    });\n  }\n  proposedEndDateHawaiiHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      proposed_end_hawaii: date,\n      proposed_end_hawaii_string: temp_string\n    });\n  }\n  proposedStartDateOthersHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      proposed_start_others: date,\n      proposed_start_others_string: temp_string\n    });\n  }\n  proposedEndDateOthersHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      proposed_end_others: date,\n      proposed_end_others_string: temp_string\n    });\n  }\n\n\n\n\n  blackoutStartDateAlaskaToFromHawaiiHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      blackout_start_alaska_to_from_hawaii: date,\n      blackout_start_alaska_to_from_hawaii_string: temp_string\n    });\n  }\n  blackoutEndDateAlaskaToFromHawaiiHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      blackout_end_alaska_to_from_hawaii: date,\n      blackout_end_alaska_to_from_hawaii_string: temp_string\n    });\n  }\n  blackoutStartDateToHawaiiHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      blackout_start_to_hawaii: date,\n      blackout_start_to_hawaii_string: temp_string\n    });\n  }\n  blackoutEndDateToHawaiiHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      blackout_end_to_hawaii: date,\n      blackout_end_to_hawaii_string: temp_string\n    });\n  }\n  blackoutStartDateFromHawaiiHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      blackout_start_from_hawaii: date,\n      blackout_start_from_hawaii_string: temp_string\n    });\n  }\n  blackoutEndDateFromHawaiiHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      blackout_end_from_hawaii: date,\n      blackout_end_from_hawaii_string: temp_string\n    });\n  }\n  blackoutStartDateMexicoHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      blackout_start_mexico: date,\n      blackout_start_mexico_string: temp_string\n    });\n  }\n  blackoutEndDateMexicoHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      blackout_end_mexico: date,\n      blackout_end_mexico_string: temp_string\n    });\n  }\n  blackoutStartDateCostaRicaHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      blackout_start_costa_rica: date,\n      blackout_start_costa_rica_string: temp_string\n    });\n  }\n  blackoutEndDateCostaRicaHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      blackout_end_costa_rica: date,\n      blackout_end_costa_rica_string: temp_string\n    });\n  }\n  blackoutStartDateOthersHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      blackout_start_others: date,\n      blackout_start_others_string:temp_string\n    });\n  }\n  blackoutEndDateOthersHandler(date) {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      blackout_end_others: date,\n      blackout_end_others_string: temp_string\n    });\n  }\n\n\n  formatMyDateForCSV = (date) => {\n    let temp_date = moment(date).format('MM/DD/YYYY');\n    return temp_date;\n  }\n\n\n\n  generateMySaleFaresCSV = (allfares) => {\n\n    let sale_start = this.state.sale_start_date_string;\n    sale_start = sale_start.replace(/-/g, \"\");\n\n    this.setState({\n      mycsvfilename: sale_start+\"_Flash-Sale\"\n    });\n\n    console.log(allfares);\n\n\n    // allfares = allfares.splice(0, 5);\n    // console.log(\"combined_array: \"+JSON.stringify(allfares));\n    allfares.map((item) => {\n//[\"SALE_ID\", \"SALE_DATE\", \"OD\", \"ORIG\", \"ORIG_NAME\", \"DEST\", \"DEST_NAME\", \"ADVERTISED_AMOUNT\", \"FIRST_CLASS_CODE\", \"FILED_FARE\", \"TAX\", \"REGION\", \"FARE_TYPE\", \"ROUND_TRIP\"],\n        let temp_array = [];\n        temp_array.push(sale_start+\"_\"+item.name+\"-\"+item.fare_type, sale_start, item.name, item.origin_code, item.origin_city, item.destination_code, item.destination_city, item.price, item.fare_class_code, item.filed_fare, item.taxes, item.shortened_region, item.fare_type, item.round_trip);\n        saleFareHeaders.push(temp_array);\n\n    });\n\n\n    console.log(\"CSV DATA: \"+JSON.stringify(saleFareHeaders));\n  }\n\n\n\n  generateMySaleDetailsCSV = () => {\n\n    let sale_start = this.state.sale_start_date_string;\n    sale_start = sale_start.replace(/-/g, \"\");\n\n    this.setState({\n      mycsvsaledetailsfilename: sale_start+\"_Sale-DETAILS\"\n    });\n\n\n// [\"SALE_ID\", \"LAUNCH_DATE\", \"EMAIL_FREQUENCY\", \"EMAIL_SEGMENTS\", \"PERFORMANCE_MEDIA_INPUT\", \"USER_EXPERIENCE_PROBLEMS\", \"SALE_TYPE\", \"SALE_NAME\", \"OVERLAPPING_TICKETING\", \"TICKETING_START\", \"TICKETING_END\", \"TICKETING_DAYS\", \"TRAVEL_START\", \"TRAVEL_END\", \"TRAVEL_DAYS\", \"TRAVEL_VARIATIONS\", \"COSTA_RICA_TRAVEL_START\", \"COSTA_RICA_TRAVEL_END\", \"COSTA_RICA_TRAVEL_DAYS\", \"MEXICO_TRAVEL_START\", \"MEXICO_TRAVEL_END\", \"MEXICO_TRAVEL_DAYS\",\"HAWAII_TRAVEL_START\", \"HAWAII_TRAVEL_END\", \"HAWAII_TRAVEL_DAYS\", \"BLACKOUT_DATES_FOR_CERTAIN_OD\", \"NUMBER_OF_OD\", \"SEASON_TARGET\", \"ADVANCE_PURCHASE\", \"SAVER_AVAILABLE\", \"COMBO_SALE\", \"LOWEST_PRICE_POINT_SEA\", \"LOWEST_PRICE_POINT_PDX\", \"LOWEST_PRICE_POINT_BAY\", \"LOWEST_PRICE_POINT_LA\", \"LOWEST_PRICE_POINT_ELSE\" ],\n\n    let temp_array = [];\n    temp_array.push(sale_start, this.formatMyDateForCSV(this.state.sale_start_date), '', '', '', '', this.state.sale_type, this.state.sale_objective, '', this.formatMyDateForCSV(this.state.sale_start_date), this.formatMyDateForCSV(this.state.sale_end_date), '', this.formatMyDateForCSV(this.state.travel_start_others), this.formatMyDateForCSV(this.state.travel_end_others), '', '', this.formatMyDateForCSV(this.state.travel_start_costa_rica), this.formatMyDateForCSV(this.state.travel_end_costa_rica), '', this.formatMyDateForCSV(this.state.travel_start_mexico), this.formatMyDateForCSV(this.state.travel_end_mexico), '', this.formatMyDateForCSV(this.state.travel_start_alaska_to_from_hawaii), this.formatMyDateForCSV(this.state.travel_end_alaska_to_from_hawaii), '', this.formatMyDateForCSV(this.state.blackout_start_others)+\" to \"+ this.formatMyDateForCSV(this.state.blackout_end_others), this.state.number_of_distinct_od, '', this.state.advance_purchase, '', '', this.state.lowest_price_sea, this.state.lowest_price_pdx, this.state.lowest_price_bay, this.state.lowest_price_la, this.state.lowest_price_no_pdc);\n\n    saleDetailsHeaders.push(temp_array);\n\n    console.log(\"CSV SALE DETAILS: \"+JSON.stringify(saleDetailsHeaders));\n\n  }\n\n\n\n  changeHiddenSheet = (e) => {\n    this.setState({\n      hidden_sheet: e.target.value\n    })\n  }\n\n\n\n\n\n\n  createMyXml(combined_array, exceptions_array, exception_test, club49deals){\n\n\n      //Create CSV File from Data\n      this.generateMySaleFaresCSV(this.state.all_my_fares);\n      this.generateMySaleDetailsCSV();\n      //Create CSV File from Data\n      console.log(this.state);\n\n\n    //CLUB 49 DEALS\n  if(exception_test === false && club49deals === true){\n      let what_combined_fares_to_make_xml_for = combined_array;\n\n\n      let array_counter_upper = 0;\n      let array_counter_lower = 0;\n\n      what_combined_fares_to_make_xml_for.map((myitem) => {\n        if(myitem[\"group\"] ===\"ALASKA_ALASKA\"){\n          myitem[\"upper_lower\"].map((myitem2) => {\n            array_counter_upper++;\n          });\n        }else{\n          myitem[\"upper_lower\"].map((myitem2) => {\n            array_counter_lower++;\n          });\n        }\n      });\n\n      //console.log(\"Length of CLUB49: \"+array_counter);\n\n      let doc = builder.create('FlightDeals', { encoding: 'UTF-8'})\n      .att('xmlns:ss', 'urn:schemas-microsoft-com:office:spreadsheet')\n      doc.com(getMyMonth(this.state.sale_start_date)+'/'+getMyDay(this.state.sale_start_date)+' CLUB 49 - Updated at '+getMyMonth(new Date())+'/'+getMyDay(new Date())+'/'+getMyYear(new Date())+' '+getMyHour(new Date())+':'+getMyMinute(new Date())+' '+getMyTimeOfDay(new Date())+' by PRODUCER_NAME');\n\n\n      what_combined_fares_to_make_xml_for.map((item) => {\n\n        let start_date = '';\n        let end_date = '';\n        let travel_start = null;\n        let travel_end = null;\n        let days_availability = '';\n\n\n        if(item[\"group\"] === \"ALASKA_ALASKA\"){\n          start_date = this.state.proposed_from_clu49_string;\n          end_date = this.state.proposed_to_clu49_string;\n          travel_start = this.state.travel_from_within_alaska;\n          travel_end = this.state.travel_by_within_alaska;\n          days_availability = this.state.days_availability_within_alaska;\n\n\n\n\n          doc.com(getMyMonth(this.state.sale_start_date)+'/'+getMyDay(this.state.sale_start_date)+' CLUB 49 -  UPPER: '+array_counter_upper+' Fares');\n          let deal_set = doc.ele('DealSet', {'from':this.state.sale_start_date_string+'T00:00:01', 'to':this.state.sale_end_date_string+'T23:59:59'})\n          .ele('DealInfo', {'code': 'CLUB_49_SALE', 'dealType':'Saver', 'url':''})\n            .ele('TravelDates', {'startdate':start_date+'T00:00:01', 'enddate':end_date+'T23:59:59'}).up()\n            .ele('DealTitle').up()\n            .ele('DealDescrip', '<![CDATA[Purchase by '+makeDateMonthInEnglish(this.state.sale_end_date)+' '+getMyDay(this.state.sale_end_date)+', '+getMyYear(this.state.sale_end_date)+'.]]>').up()\n            .ele('terms','<![CDATA[<strong>Fare Rules:</strong> Purchase by 11:59 pm (PT) on '+makeDateMonthInEnglish(this.state.sale_end_date)+' '+getMyDay(this.state.sale_end_date)+', '+getMyYear(this.state.sale_end_date)+', and at least '+this.state.advance_purchase+' prior to departure. Travel within Alaska is valid '+days_availability+' from '+makeDateMonthInEnglish(travel_start)+' '+getMyDay(travel_start)+', '+getMyYear(travel_start)+' - '+makeDateMonthInEnglish(travel_end)+' '+getMyDay(travel_end)+', '+getMyYear(travel_end)+'. Seats are limited and may not be available on all flights or all days. If nonstop service is offered during the advertised travel period, the advertised fare applies to the nonstop flights only. Bag fees <a href=\"#terms\">may apply</a> for <a href=\"/content/travel-info/baggage/checked-bags\">checked baggage</a>. See <a href=\"#terms\">bottom of page</a> for full terms and conditions.]]>').up()\n            .up()\n            let fares_layer = deal_set.ele('Fares');\n          item[\"upper_lower\"].map((item2) => {\n            fares_layer.ele('Row', {'fareType': 'Main'})\n            .ele('Cell','<Data>'+item2[\"origin_code\"]+'</Data>').up()\n            .ele('Cell','<Data>'+returnMyCityName(item2[\"origin_code\"])+'</Data>').up()\n            .ele('Cell','<Data>'+item2[\"destination_code\"]+'</Data>').up()\n            .ele('Cell','<Data>'+returnMyCityName(item2[\"destination_code\"])+'</Data>').up()\n            .ele('Cell','<Data>'+item2[\"price\"]+'</Data>').up()\n          });\n\n\n        }else if(item[\"group\"] === \"FROM_ALASKA\"){\n          start_date = this.state.proposed_from_clu49_string;\n          end_date = this.state.proposed_to_clu49_string;\n          travel_start = this.state.travel_from_to_us;\n          travel_end = this.state.travel_by_to_us;\n          days_availability = this.state.days_availability_to_us;\n\n          doc.com(getMyMonth(this.state.sale_start_date)+'/'+getMyDay(this.state.sale_start_date)+' CLUB 49 -  LOWER: '+array_counter_lower+' Fares');\n          let deal_set = doc.ele('DealSet', {'from':this.state.sale_start_date_string+'T00:00:01', 'to':this.state.sale_end_date_string+'T23:59:59'})\n          .ele('DealInfo', {'code': 'CLUB_49_SALE', 'dealType':'Saver', 'url':''})\n            .ele('TravelDates', {'startdate':start_date+'T00:00:01', 'enddate':end_date+'T23:59:59'}).up()\n            .ele('DealTitle').up()\n            .ele('DealDescrip', '<![CDATA[Purchase by '+makeDateMonthInEnglish(this.state.sale_end_date)+' '+getMyDay(this.state.sale_end_date)+', '+getMyYear(this.state.sale_end_date)+'.]]>').up()\n            .ele('terms','<![CDATA[<strong>Fare Rules:</strong> Purchase by 11:59 pm (PT) on '+makeDateMonthInEnglish(this.state.sale_end_date)+' '+getMyDay(this.state.sale_end_date)+', '+getMyYear(this.state.sale_end_date)+', and at least '+this.state.advance_purchase+' prior to departure. Travel to the US is valid '+days_availability+' from '+makeDateMonthInEnglish(travel_start)+' '+getMyDay(travel_start)+', '+getMyYear(travel_start)+' - '+makeDateMonthInEnglish(travel_end)+' '+getMyDay(travel_end)+', '+getMyYear(travel_end)+'. Bag fees <a href=\"#terms\">may apply</a> for <a href=\"/content/travel-info/baggage/checked-bags\">checked baggage</a>. See <a href=\"#terms\">bottom of page</a> for full terms and conditions.]]>').up()\n            .up()\n            let fares_layer = deal_set.ele('Fares');\n          item[\"upper_lower\"].map((item2) => {\n            fares_layer.ele('Row', {'fareType': 'Main'})\n            .ele('Cell','<Data>'+item2[\"origin_code\"]+'</Data>').up()\n            .ele('Cell','<Data>'+returnMyCityName(item2[\"origin_code\"])+'</Data>').up()\n            .ele('Cell','<Data>'+item2[\"destination_code\"]+'</Data>').up()\n            .ele('Cell','<Data>'+returnMyCityName(item2[\"destination_code\"])+'</Data>').up()\n            .ele('Cell','<Data>'+item2[\"price\"]+'</Data>').up()\n          });\n\n        }else if(item[\"group\"] === \"ALASKA_HAWAII\"){\n          start_date = this.state.proposed_from_clu49_string;\n          end_date = this.state.proposed_to_clu49_string;\n          travel_start = this.state.travel_from_to_us;\n          travel_end = this.state.travel_by_to_us;\n          days_availability = this.state.days_availability_hawaii;\n\n          doc.com(getMyMonth(this.state.sale_start_date)+'/'+getMyDay(this.state.sale_start_date)+' CLUB 49 -  LOWER: '+array_counter_lower+' Fares');\n          let deal_set = doc.ele('DealSet', {'from':this.state.sale_start_date_string+'T00:00:01', 'to':this.state.sale_end_date_string+'T23:59:59'})\n          .ele('DealInfo', {'code': 'CLUB_49_SALE', 'dealType':'Saver', 'url':''})\n            .ele('TravelDates', {'startdate':start_date+'T00:00:01', 'enddate':end_date+'T23:59:59'}).up()\n            .ele('DealTitle').up()\n            .ele('DealDescrip', '<![CDATA[Purchase by '+makeDateMonthInEnglish(this.state.sale_end_date)+' '+getMyDay(this.state.sale_end_date)+', '+getMyYear(this.state.sale_end_date)+'.]]>').up()\n            .ele('terms','<![CDATA[<strong>Fare Rules:</strong> Purchase by 11:59 pm (PT) on '+makeDateMonthInEnglish(this.state.sale_end_date)+' '+getMyDay(this.state.sale_end_date)+', '+getMyYear(this.state.sale_end_date)+', and at least '+this.state.advance_purchase+' prior to departure. Travel to Hawaii is valid '+days_availability+' from '+makeDateMonthInEnglish(travel_start)+' '+getMyDay(travel_start)+', '+getMyYear(travel_start)+' - '+makeDateMonthInEnglish(travel_end)+' '+getMyDay(travel_end)+', '+getMyYear(travel_end)+'. Bag fees <a href=\"#terms\">may apply</a> for <a href=\"/content/travel-info/baggage/checked-bags\">checked baggage</a>. See <a href=\"#terms\">bottom of page</a> for full terms and conditions.]]>').up()\n            .up()\n            let fares_layer = deal_set.ele('Fares');\n          item[\"upper_lower\"].map((item2) => {\n            fares_layer.ele('Row', {'fareType': 'Main'})\n            .ele('Cell','<Data>'+item2[\"origin_code\"]+'</Data>').up()\n            .ele('Cell','<Data>'+returnMyCityName(item2[\"origin_code\"])+'</Data>').up()\n            .ele('Cell','<Data>'+item2[\"destination_code\"]+'</Data>').up()\n            .ele('Cell','<Data>'+returnMyCityName(item2[\"destination_code\"])+'</Data>').up()\n            .ele('Cell','<Data>'+item2[\"price\"]+'</Data>').up()\n          });\n\n\n        }else{\n\n        }\n\n\n      });\n\n      let element = doc.toString({pretty: true});\n      element = element.replace(/&lt;/g, '<');\n      element = element.replace(/&gt;/g, '>');\n\n      this.setState({\n        xmloutput: element\n      });\n\n\n\n  //NORMAL FLIGHT DEALS WITH SAVER SAVER FARES\n  }else if(exception_test === false && club49deals === false){\n\n\n\n      let what_combined_fares_to_make_xml_for = combined_array;\n      let what_exception_fares_to_make_xml_for = exceptions_array;\n\n\n      let doc = builder.create('FlightDeals', { encoding: 'UTF-8'})\n      .att('xmlns:ss', 'urn:schemas-microsoft-com:office:spreadsheet')\n\n      if(this.state.selectedOption === 'Mileage'){\n        doc.com(getMyMonth(this.state.sale_start_date)+'/'+getMyDay(this.state.sale_start_date)+' AWARD SALE - Updated at '+getMyMonth(new Date())+'/'+getMyDay(new Date())+'/'+getMyYear(new Date())+' '+getMyHour(new Date())+':'+getMyMinute(new Date())+' '+getMyTimeOfDay(new Date())+' by PRODUCER_NAME');\n      }else{\n        doc.com(getMyMonth(this.state.sale_start_date)+'/'+getMyDay(this.state.sale_start_date)+' SALE - Updated at '+getMyMonth(new Date())+'/'+getMyDay(new Date())+'/'+getMyYear(new Date())+' '+getMyHour(new Date())+':'+getMyMinute(new Date())+' '+getMyTimeOfDay(new Date())+' by PRODUCER_NAME');\n      }\n\n\n      what_combined_fares_to_make_xml_for.map((item) => {\n\n        let start_date = '';\n        let end_date = '';\n        let travel_start = null;\n        let travel_end = null;\n        let days_availability = '';\n        let black_out_date_sentence = '';\n\n        if(item[\"group\"] === \"ALASKA_HAWAII\"){\n          start_date = this.state.proposed_start_hawaii_string;\n          end_date = this.state.proposed_end_hawaii_string;\n          travel_start = this.state.travel_start_alaska_to_from_hawaii;\n          travel_end = this.state.travel_end_alaska_to_from_hawaii;\n          days_availability = this.state.days_availability_hawaii;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_alaska_to_from_hawaii !== null && this.state.blackout_end_alaska_to_from_hawaii !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_alaska_to_from_hawaii)+' '+getMyDay(this.state.blackout_start_alaska_to_from_hawaii)+', '+getMyYear(this.state.blackout_start_alaska_to_from_hawaii)+' to '+makeDateMonthInEnglish(this.state.blackout_end_alaska_to_from_hawaii)+' '+getMyDay(this.state.blackout_end_alaska_to_from_hawaii)+', '+getMyYear(this.state.blackout_end_alaska_to_from_hawaii)+'. '\n            }\n        }else if(item[\"group\"] === \"ALASKA_ALASKA\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_others;\n          travel_end = this.state.travel_end_others;\n          days_availability = this.state.days_availability_others;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else if(item[\"group\"] === \"FROM_ALASKA\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_others;\n          travel_end = this.state.travel_end_others;\n          days_availability = this.state.days_availability_others;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else if(item[\"group\"] === \"TO_ALASKA\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_others;\n          travel_end = this.state.travel_end_others;\n          days_availability = this.state.days_availability_others;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else if(item[\"group\"] === \"TO_HAWAII\" || item[\"group\"] === \"FROM_HAWAII\"){\n          start_date = this.state.proposed_start_hawaii_string;\n          end_date = this.state.proposed_end_hawaii_string;\n          travel_start = this.state.travel_start_hawaii;\n          travel_end = this.state.travel_end_hawaii;\n          days_availability = this.state.days_availability_hawaii;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_from_hawaii !== null && this.state.blackout_end_from_hawaii !== null && item[\"group\"] === \"FROM_HAWAII\"){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_from_hawaii)+' '+getMyDay(this.state.blackout_start_from_hawaii)+', '+getMyYear(this.state.blackout_start_from_hawaii)+' to '+makeDateMonthInEnglish(this.state.blackout_end_from_hawaii)+' '+getMyDay(this.state.blackout_end_from_hawaii)+', '+getMyYear(this.state.blackout_end_from_hawaii)+'. '\n            }\n            if(this.state.blackout_start_to_hawaii !== null && this.state.blackout_start_to_hawaii !== null && item[\"group\"] === \"TO_HAWAII\"){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_to_hawaii)+' '+getMyDay(this.state.blackout_start_to_hawaii)+', '+getMyYear(this.state.blackout_start_to_hawaii)+' to '+makeDateMonthInEnglish(this.state.blackout_end_to_hawaii)+' '+getMyDay(this.state.blackout_end_to_hawaii)+', '+getMyYear(this.state.blackout_end_to_hawaii)+'. '\n            }\n        }else if(item[\"group\"] === \"TO_FLORIDA\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_florida;\n          travel_end = this.state.travel_end_florida;\n          days_availability = this.state.days_availability_to_florida;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else if(item[\"group\"] === \"FROM_FLORIDA\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_florida;\n          travel_end = this.state.travel_end_florida;\n          days_availability = this.state.days_availability_from_florida;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else if(item[\"group\"] === \"MEXICO\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_mexico;\n          travel_end = this.state.travel_end_mexico;\n          days_availability = this.state.days_availability_mexico;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_mexico !== null && this.state.blackout_start_mexico !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_mexico)+' '+getMyDay(this.state.blackout_start_mexico)+', '+getMyYear(this.state.blackout_start_mexico)+' to '+makeDateMonthInEnglish(this.state.blackout_end_mexico)+' '+getMyDay(this.state.blackout_end_mexico)+', '+getMyYear(this.state.blackout_end_mexico)+'. '\n            }\n        }else if(item[\"group\"] === \"COSTA_RICA\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_costa_rica;\n          travel_end = this.state.travel_end_costa_rica;\n          days_availability = this.state.days_availability_costa_rica;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_costa_rica !== null && this.state.blackout_start_costa_rica !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_costa_rica)+' '+getMyDay(this.state.blackout_start_costa_rica)+', '+getMyYear(this.state.blackout_start_costa_rica)+' to '+makeDateMonthInEnglish(this.state.blackout_end_costa_rica)+' '+getMyDay(this.state.blackout_end_costa_rica)+', '+getMyYear(this.state.blackout_end_costa_rica)+'. '\n            }\n        }else if(item[\"group\"] === \"PAE\"){\n          start_date = this.state.proposed_start_pae_string;\n          end_date = this.state.proposed_end_pae_string;\n          travel_start = this.state.travel_start_others;\n          travel_end = this.state.travel_end_others;\n          days_availability = this.state.days_availability_others;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else if(item[\"group\"] === \"OTHER_MARKET\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_others;\n          travel_end = this.state.travel_end_others;\n          days_availability = this.state.days_availability_others;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else{\n\n        }\n\n        let service_begin_sentence = '';\n        let service_ends_sentence = '';\n        let d_type = '';\n        let f_type = '';\n\n          if(this.state.selectedOption === 'Mileage'){\n            d_type = 'MileagePlan';\n            f_type = 'Miles'\n          }else{\n            d_type = 'Saver';\n          }\n\n        //console.log(item);\n        doc.com(getMyMonth(this.state.sale_start_date)+'/'+getMyDay(this.state.sale_start_date)+' '+item[\"name\"]);\n        let deal_set = doc.ele('DealSet', {'from':this.state.sale_start_date_string+'T00:00:01', 'to':this.state.sale_end_date_string+'T23:59:59'})\n          .ele('DealInfo', {'code': getMyYear(this.state.sale_start_date)+''+getMyMonth(this.state.sale_start_date)+''+getMyDay(this.state.sale_start_date)+'_SALE-'+item[\"name\"], 'dealType': d_type, 'url':''})\n          .ele('TravelDates', {'startdate':start_date+'T00:00:01', 'enddate':end_date+'T23:59:59'}).up()\n          .ele('DealTitle').up()\n          .ele('DealDescrip', '<![CDATA[Purchase by '+makeDateMonthInEnglish(this.state.sale_end_date)+' '+getMyDay(this.state.sale_end_date)+', '+getMyYear(this.state.sale_end_date)+'.]]>').up()\n          .ele('terms','<![CDATA[<strong>Fare Rules:</strong> Purchase by 11:59 pm (PT) on '+makeDateMonthInEnglish(this.state.sale_end_date)+' '+getMyDay(this.state.sale_end_date)+', '+getMyYear(this.state.sale_end_date)+', and at least '+this.state.advance_purchase+' prior to departure. Travel from '+item[\"origin_city\"]+' ('+item[\"origin_code\"]+') to '+item[\"destination_city\"]+' ('+item[\"destination_code\"]+') is valid '+days_availability+' from '+makeDateMonthInEnglish(travel_start)+' '+getMyDay(travel_start)+', '+getMyYear(travel_start)+' - '+makeDateMonthInEnglish(travel_end)+' '+getMyDay(travel_end)+', '+getMyYear(travel_end)+'. '+service_begin_sentence+''+service_ends_sentence+''+black_out_date_sentence+'Seats are limited and may not be available on all flights or all days. If nonstop service is offered during the advertised travel period, the advertised fare applies to the nonstop flights only. Bag fees <a href=\"#terms\">may apply</a> for <a href=\"/content/travel-info/baggage/checked-bags\">checked baggage</a>. See <a href=\"#terms\">bottom of page</a> for full terms and conditions.]]>').up()\n          .up()\n          let fares_layer = deal_set.ele('Fares');\n\n          if(f_type === 'Miles'){\n            item[\"price_types\"].map((item2) => {\n              if(item[\"default\"]===true){\n                fares_layer.ele('Row', {'fareType': f_type, 'showAsDefault' : 'true'})\n                .ele('Cell','<Data>'+item[\"origin_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"origin_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item[\"destination_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"destination_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item2[\"price\"]+'</Data>').up()\n                .ele('Cell','<Data>'+item2[\"taxes\"]+'</Data>').up()\n              }else{\n                fares_layer.ele('Row', {'fareType': f_type})\n                .ele('Cell','<Data>'+item[\"origin_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"origin_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item[\"destination_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"destination_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item2[\"price\"]+'</Data>').up()\n                .ele('Cell','<Data>'+item2[\"taxes\"]+'</Data>').up()\n              }\n            });\n          }else{\n            item[\"price_types\"].map((item2) => {\n              if(item[\"default\"]===true && item2['fare_type'] === \"Saver\"){\n                fares_layer.ele('Row', {'fareType': item2['fare_type'], 'showAsDefault' : 'true'})\n                .ele('Cell','<Data>'+item[\"origin_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"origin_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item[\"destination_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"destination_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item2[\"price\"]+'</Data>').up()\n              }else{\n                fares_layer.ele('Row', {'fareType': item2['fare_type']})\n                .ele('Cell','<Data>'+item[\"origin_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"origin_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item[\"destination_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"destination_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item2[\"price\"]+'</Data>').up()\n              }\n            });\n          }\n\n\n\n      });\n\n      let element = doc.toString({pretty: true});\n      element = element.replace(/&lt;/g, '<');\n      element = element.replace(/&gt;/g, '>');\n\n      this.setState({\n        xmloutput: element\n      });\n\n\n  }else{\n\n      let what_combined_fares_to_make_xml_for = combined_array;\n      let what_exception_fares_to_make_xml_for = exceptions_array;\n\n\n      let doc = builder.create('FlightDeals', { encoding: 'UTF-8'})\n      .att('xmlns:ss', 'urn:schemas-microsoft-com:office:spreadsheet')\n      if(this.state.selectedOption === 'Mileage'){\n        doc.com(getMyMonth(this.state.sale_start_date)+'/'+getMyDay(this.state.sale_start_date)+' AWARD SALE - Updated at '+getMyMonth(new Date())+'/'+getMyDay(new Date())+'/'+getMyYear(new Date())+' '+getMyHour(new Date())+':'+getMyMinute(new Date())+' '+getMyTimeOfDay(new Date())+' by PRODUCER_NAME');\n      }else{\n        doc.com(getMyMonth(this.state.sale_start_date)+'/'+getMyDay(this.state.sale_start_date)+' SALE - Updated at '+getMyMonth(new Date())+'/'+getMyDay(new Date())+'/'+getMyYear(new Date())+' '+getMyHour(new Date())+':'+getMyMinute(new Date())+' '+getMyTimeOfDay(new Date())+' by PRODUCER_NAME');\n      }\n\n\n\n      what_combined_fares_to_make_xml_for.map((item) => {\n\n        let start_date = '';\n        let end_date = '';\n        let travel_start = null;\n        let travel_end = null;\n        let days_availability = '';\n        let black_out_date_sentence = '';\n\n        if(item[\"group\"] === \"ALASKA_HAWAII\"){\n          start_date = this.state.proposed_start_hawaii_string;\n          end_date = this.state.proposed_end_hawaii_string;\n          travel_start = this.state.travel_start_alaska_to_from_hawaii;\n          travel_end = this.state.travel_end_alaska_to_from_hawaii;\n          days_availability = this.state.days_availability_hawaii;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_alaska_to_from_hawaii !== null && this.state.blackout_end_alaska_to_from_hawaii !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_alaska_to_from_hawaii)+' '+getMyDay(this.state.blackout_start_alaska_to_from_hawaii)+', '+getMyYear(this.state.blackout_start_alaska_to_from_hawaii)+' to '+makeDateMonthInEnglish(this.state.blackout_end_alaska_to_from_hawaii)+' '+getMyDay(this.state.blackout_end_alaska_to_from_hawaii)+', '+getMyYear(this.state.blackout_end_alaska_to_from_hawaii)+'. '\n            }\n        }else if(item[\"group\"] === \"ALASKA_ALASKA\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_others;\n          travel_end = this.state.travel_end_others;\n          days_availability = this.state.days_availability_others;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else if(item[\"group\"] === \"FROM_ALASKA\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_others;\n          travel_end = this.state.travel_end_others;\n          days_availability = this.state.days_availability_others;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else if(item[\"group\"] === \"TO_ALASKA\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_others;\n          travel_end = this.state.travel_end_others;\n          days_availability = this.state.days_availability_others;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else if(item[\"group\"] === \"TO_HAWAII\" || item[\"group\"] === \"FROM_HAWAII\"){\n          start_date = this.state.proposed_start_hawaii_string;\n          end_date = this.state.proposed_end_hawaii_string;\n          travel_start = this.state.travel_start_hawaii;\n          travel_end = this.state.travel_end_hawaii;\n          days_availability = this.state.days_availability_hawaii;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_from_hawaii !== null && this.state.blackout_end_from_hawaii !== null && item[\"group\"] === \"FROM_HAWAII\"){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_from_hawaii)+' '+getMyDay(this.state.blackout_start_from_hawaii)+', '+getMyYear(this.state.blackout_start_from_hawaii)+' to '+makeDateMonthInEnglish(this.state.blackout_end_from_hawaii)+' '+getMyDay(this.state.blackout_end_from_hawaii)+', '+getMyYear(this.state.blackout_end_from_hawaii)+'. '\n            }\n            if(this.state.blackout_start_to_hawaii !== null && this.state.blackout_start_to_hawaii !== null && item[\"group\"] === \"TO_HAWAII\"){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_to_hawaii)+' '+getMyDay(this.state.blackout_start_to_hawaii)+', '+getMyYear(this.state.blackout_start_to_hawaii)+' to '+makeDateMonthInEnglish(this.state.blackout_end_to_hawaii)+' '+getMyDay(this.state.blackout_end_to_hawaii)+', '+getMyYear(this.state.blackout_end_to_hawaii)+'. '\n            }\n        }else if(item[\"group\"] === \"TO_FLORIDA\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_florida;\n          travel_end = this.state.travel_end_florida;\n          days_availability = this.state.days_availability_to_florida;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else if(item[\"group\"] === \"FROM_FLORIDA\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_florida;\n          travel_end = this.state.travel_end_florida;\n          days_availability = this.state.days_availability_from_florida;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else if(item[\"group\"] === \"MEXICO\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_mexico;\n          travel_end = this.state.travel_end_mexico;\n          days_availability = this.state.days_availability_mexico;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_mexico !== null && this.state.blackout_start_mexico !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_mexico)+' '+getMyDay(this.state.blackout_start_mexico)+', '+getMyYear(this.state.blackout_start_mexico)+' to '+makeDateMonthInEnglish(this.state.blackout_end_mexico)+' '+getMyDay(this.state.blackout_end_mexico)+', '+getMyYear(this.state.blackout_end_mexico)+'. '\n            }\n        }else if(item[\"group\"] === \"COSTA_RICA\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_costa_rica;\n          travel_end = this.state.travel_end_costa_rica;\n          days_availability = this.state.days_availability_costa_rica;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_costa_rica !== null && this.state.blackout_start_costa_rica !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_costa_rica)+' '+getMyDay(this.state.blackout_start_costa_rica)+', '+getMyYear(this.state.blackout_start_costa_rica)+' to '+makeDateMonthInEnglish(this.state.blackout_end_costa_rica)+' '+getMyDay(this.state.blackout_end_costa_rica)+', '+getMyYear(this.state.blackout_end_costa_rica)+'. '\n            }\n        }else if(item[\"group\"] === \"PAE\"){\n          start_date = this.state.proposed_start_pae_string;\n          end_date = this.state.proposed_end_pae_string;\n          travel_start = this.state.travel_start_others;\n          travel_end = this.state.travel_end_others;\n          days_availability = this.state.days_availability_others;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else if(item[\"group\"] === \"OTHER_MARKET\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_others;\n          travel_end = this.state.travel_end_others;\n          days_availability = this.state.days_availability_others;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else{\n\n        }\n\n\n        let service_begin_sentence = '';\n        let service_ends_sentence = '';\n        let d_type = '';\n        let f_type = '';\n\n          if(this.state.selectedOption === 'Mileage'){\n            d_type = 'MileagePlan';\n            f_type = 'Miles'\n          }else{\n            d_type = 'Saver';\n          }\n\n        //console.log(item);\n        doc.com(getMyMonth(this.state.sale_start_date)+'/'+getMyDay(this.state.sale_start_date)+' '+item[\"name\"]);\n        let deal_set = doc.ele('DealSet', {'from':this.state.sale_start_date_string+'T00:00:01', 'to':this.state.sale_end_date_string+'T23:59:59'})\n        .ele('DealInfo', {'code': getMyYear(this.state.sale_start_date)+''+getMyMonth(this.state.sale_start_date)+''+getMyDay(this.state.sale_start_date)+'_SALE-'+item[\"name\"], 'dealType':d_type, 'url':''})\n          .ele('TravelDates', {'startdate':start_date+'T00:00:01', 'enddate':end_date+'T23:59:59'}).up()\n          .ele('DealTitle').up()\n          .ele('DealDescrip', '<![CDATA[Purchase by '+makeDateMonthInEnglish(this.state.sale_end_date)+' '+getMyDay(this.state.sale_end_date)+', '+getMyYear(this.state.sale_end_date)+'.]]>').up()\n          .ele('terms','<![CDATA[<strong>Fare Rules:</strong> Purchase by 11:59 pm (PT) on '+makeDateMonthInEnglish(this.state.sale_end_date)+' '+getMyDay(this.state.sale_end_date)+', '+getMyYear(this.state.sale_end_date)+', and at least '+this.state.advance_purchase+' prior to departure. Travel from '+item[\"origin_city\"]+' ('+item[\"origin_code\"]+') to '+item[\"destination_city\"]+' ('+item[\"destination_code\"]+') is valid '+days_availability+' from '+makeDateMonthInEnglish(travel_start)+' '+getMyDay(travel_start)+', '+getMyYear(travel_start)+' - '+makeDateMonthInEnglish(travel_end)+' '+getMyDay(travel_end)+', '+getMyYear(travel_end)+'. '+service_begin_sentence+''+service_ends_sentence+''+black_out_date_sentence+'Seats are limited and may not be available on all flights or all days. If nonstop service is offered during the advertised travel period, the advertised fare applies to the nonstop flights only. Bag fees <a href=\"#terms\">may apply</a> for <a href=\"/content/travel-info/baggage/checked-bags\">checked baggage</a>. See <a href=\"#terms\">bottom of page</a> for full terms and conditions.]]>').up()\n          .up()\n          let fares_layer = deal_set.ele('Fares');\n\n          if(f_type === 'Miles'){\n            item[\"price_types\"].map((item2) => {\n              if(item[\"default\"]===true){\n                fares_layer.ele('Row', {'fareType': f_type, 'showAsDefault' : 'true'})\n                .ele('Cell','<Data>'+item[\"origin_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"origin_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item[\"destination_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"destination_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item2[\"price\"]+'</Data>').up()\n                .ele('Cell','<Data>'+item2[\"taxes\"]+'</Data>').up()\n              }else{\n                fares_layer.ele('Row', {'fareType': f_type})\n                .ele('Cell','<Data>'+item[\"origin_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"origin_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item[\"destination_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"destination_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item2[\"price\"]+'</Data>').up()\n                .ele('Cell','<Data>'+item2[\"taxes\"]+'</Data>').up()\n              }\n            });\n          }else{\n            item[\"price_types\"].map((item2) => {\n              if(item[\"default\"]===true && item2['fare_type'] === \"Saver\"){\n                fares_layer.ele('Row', {'fareType': item2['fare_type'], 'showAsDefault' : 'true'})\n                .ele('Cell','<Data>'+item[\"origin_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"origin_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item[\"destination_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"destination_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item2[\"price\"]+'</Data>').up()\n              }else{\n                fares_layer.ele('Row', {'fareType': item2['fare_type']})\n                .ele('Cell','<Data>'+item[\"origin_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"origin_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item[\"destination_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"destination_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item2[\"price\"]+'</Data>').up()\n              }\n            });\n          }\n\n\n\n\n      });\n\n      what_exception_fares_to_make_xml_for.map((item) => {\n\n        let start_date = '';\n        let end_date = '';\n        let travel_start = null;\n        let travel_end = null;\n        let days_availability = '';\n        let black_out_date_sentence = '';\n\n        if(item[\"group\"] === \"ALASKA_HAWAII\"){\n          start_date = this.state.proposed_start_hawaii_string;\n          end_date = this.state.proposed_end_hawaii_string;\n          travel_start = this.state.travel_start_alaska_to_from_hawaii;\n          travel_end = this.state.travel_end_alaska_to_from_hawaii;\n          days_availability = this.state.days_availability_hawaii;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_alaska_to_from_hawaii !== null && this.state.blackout_end_alaska_to_from_hawaii !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_alaska_to_from_hawaii)+' '+getMyDay(this.state.blackout_start_alaska_to_from_hawaii)+', '+getMyYear(this.state.blackout_start_alaska_to_from_hawaii)+' to '+makeDateMonthInEnglish(this.state.blackout_end_alaska_to_from_hawaii)+' '+getMyDay(this.state.blackout_end_alaska_to_from_hawaii)+', '+getMyYear(this.state.blackout_end_alaska_to_from_hawaii)+'. '\n            }\n        }else if(item[\"group\"] === \"ALASKA_ALASKA\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_others;\n          travel_end = this.state.travel_end_others;\n          days_availability = this.state.days_availability_others;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else if(item[\"group\"] === \"FROM_ALASKA\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_others;\n          travel_end = this.state.travel_end_others;\n          days_availability = this.state.days_availability_others;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else if(item[\"group\"] === \"TO_ALASKA\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_others;\n          travel_end = this.state.travel_end_others;\n          days_availability = this.state.days_availability_others;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else if(item[\"group\"] === \"TO_HAWAII\" || item[\"group\"] === \"FROM_HAWAII\"){\n          start_date = this.state.proposed_start_hawaii_string;\n          end_date = this.state.proposed_end_hawaii_string;\n          travel_start = this.state.travel_start_hawaii;\n          travel_end = this.state.travel_end_hawaii;\n          days_availability = this.state.days_availability_hawaii;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_from_hawaii !== null && this.state.blackout_end_from_hawaii !== null && item[\"group\"] === \"FROM_HAWAII\"){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_from_hawaii)+' '+getMyDay(this.state.blackout_start_from_hawaii)+', '+getMyYear(this.state.blackout_start_from_hawaii)+' to '+makeDateMonthInEnglish(this.state.blackout_end_from_hawaii)+' '+getMyDay(this.state.blackout_end_from_hawaii)+', '+getMyYear(this.state.blackout_end_from_hawaii)+'. '\n            }\n            if(this.state.blackout_start_to_hawaii !== null && this.state.blackout_start_to_hawaii !== null && item[\"group\"] === \"TO_HAWAII\"){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_to_hawaii)+' '+getMyDay(this.state.blackout_start_to_hawaii)+', '+getMyYear(this.state.blackout_start_to_hawaii)+' to '+makeDateMonthInEnglish(this.state.blackout_end_to_hawaii)+' '+getMyDay(this.state.blackout_end_to_hawaii)+', '+getMyYear(this.state.blackout_end_to_hawaii)+'. '\n            }\n        }else if(item[\"group\"] === \"TO_FLORIDA\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_florida;\n          travel_end = this.state.travel_end_florida;\n          days_availability = this.state.days_availability_to_florida;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else if(item[\"group\"] === \"FROM_FLORIDA\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_florida;\n          travel_end = this.state.travel_end_florida;\n          days_availability = this.state.days_availability_from_florida;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else if(item[\"group\"] === \"MEXICO\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_mexico;\n          travel_end = this.state.travel_end_mexico;\n          days_availability = this.state.days_availability_mexico;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_mexico !== null && this.state.blackout_start_mexico !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_mexico)+' '+getMyDay(this.state.blackout_start_mexico)+', '+getMyYear(this.state.blackout_start_mexico)+' to '+makeDateMonthInEnglish(this.state.blackout_end_mexico)+' '+getMyDay(this.state.blackout_end_mexico)+', '+getMyYear(this.state.blackout_end_mexico)+'. '\n            }\n        }else if(item[\"group\"] === \"COSTA_RICA\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_costa_rica;\n          travel_end = this.state.travel_end_costa_rica;\n          days_availability = this.state.days_availability_costa_rica;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_costa_rica !== null && this.state.blackout_start_costa_rica !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_costa_rica)+' '+getMyDay(this.state.blackout_start_costa_rica)+', '+getMyYear(this.state.blackout_start_costa_rica)+' to '+makeDateMonthInEnglish(this.state.blackout_end_costa_rica)+' '+getMyDay(this.state.blackout_end_costa_rica)+', '+getMyYear(this.state.blackout_end_costa_rica)+'. '\n            }\n        }else if(item[\"group\"] === \"PAE\"){\n          start_date = this.state.proposed_start_pae_string;\n          end_date = this.state.proposed_end_pae_string;\n          travel_start = this.state.travel_start_others;\n          travel_end = this.state.travel_end_others;\n          days_availability = this.state.days_availability_others;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else if(item[\"group\"] === \"OTHER_MARKET\"){\n          start_date = this.state.proposed_start_others_string;\n          end_date = this.state.proposed_end_others_string;\n          travel_start = this.state.travel_start_others;\n          travel_end = this.state.travel_end_others;\n          days_availability = this.state.days_availability_others;\n            // Pulling BLACKOUT DATES and FORMING the sentence\n            if(this.state.blackout_start_others !== null && this.state.blackout_start_others !== null){\n              black_out_date_sentence = 'Blackout dates are from '+makeDateMonthInEnglish(this.state.blackout_start_others)+' '+getMyDay(this.state.blackout_start_others)+', '+getMyYear(this.state.blackout_start_others)+' to '+makeDateMonthInEnglish(this.state.blackout_end_others)+' '+getMyDay(this.state.blackout_end_others)+', '+getMyYear(this.state.blackout_end_others)+'. '\n            }\n        }else{\n\n        }\n\n\n        /*SPECIFIC TO EXCEPTIONS ONLY*/\n        if(item[\"days_available\"] !== ''){\n          days_availability = item[\"days_available\"];\n        }\n        let service_begin_sentence = '';\n        if(item[\"service_begins\"] !== null){\n          service_begin_sentence = 'Service begins '+ makeDateMonthInEnglish(item[\"service_begins\"])+' '+getMyDay(item[\"service_begins\"])+', '+getMyYear(item[\"service_begins\"])+'. ';\n        }\n        let service_ends_sentence = '';\n        if(item[\"service_ends\"] !== null){\n          service_ends_sentence = 'Service ends '+ makeDateMonthInEnglish(item[\"service_ends\"])+' '+getMyDay(item[\"service_ends\"])+', '+getMyYear(item[\"service_ends\"])+'. ';\n        }\n        /*SPECIFIC TO EXCEPTIONS ONLY*/\n\n        let d_type = '';\n        let f_type = '';\n\n        if(this.state.selectedOption === 'Mileage'){\n          d_type = 'MileagePlan';\n          f_type = 'Miles';\n        }else{\n          d_type = 'Saver';\n        }\n\n        //console.log(item);\n        doc.com(getMyMonth(this.state.sale_start_date)+'/'+getMyDay(this.state.sale_start_date)+' '+item[\"name\"]+' EXCEPTION');\n        let deal_set = doc.ele('DealSet', {'from':this.state.sale_start_date_string+'T00:00:01', 'to':this.state.sale_end_date_string+'T23:59:59'})\n        .ele('DealInfo', {'code': getMyYear(this.state.sale_start_date)+''+getMyMonth(this.state.sale_start_date)+''+getMyDay(this.state.sale_start_date)+'_SALE-'+item[\"name\"], 'dealType':d_type, 'url':''})\n          .ele('TravelDates', {'startdate':start_date+'T00:00:01', 'enddate':end_date+'T23:59:59'}).up()\n          .ele('DealTitle').up()\n          .ele('DealDescrip', '<![CDATA[Purchase by '+makeDateMonthInEnglish(this.state.sale_end_date)+' '+getMyDay(this.state.sale_end_date)+', '+getMyYear(this.state.sale_end_date)+'.]]>').up()\n          .ele('terms','<![CDATA[<strong>Fare Rules:</strong> Purchase by 11:59 pm (PT) on '+makeDateMonthInEnglish(this.state.sale_end_date)+' '+getMyDay(this.state.sale_end_date)+', '+getMyYear(this.state.sale_end_date)+', and at least '+this.state.advance_purchase+' prior to departure. Travel from '+item[\"origin_city\"]+' ('+item[\"origin_code\"]+') to '+item[\"destination_city\"]+' ('+item[\"destination_code\"]+') is valid '+days_availability+' from '+makeDateMonthInEnglish(travel_start)+' '+getMyDay(travel_start)+', '+getMyYear(travel_start)+' - '+makeDateMonthInEnglish(travel_end)+' '+getMyDay(travel_end)+', '+getMyYear(travel_end)+'. '+service_begin_sentence+''+service_ends_sentence+''+black_out_date_sentence+'Seats are limited and may not be available on all flights or all days. If nonstop service is offered during the advertised travel period, the advertised fare applies to the nonstop flights only. Bag fees <a href=\"#terms\">may apply</a> for <a href=\"/content/travel-info/baggage/checked-bags\">checked baggage</a>. See <a href=\"#terms\">bottom of page</a> for full terms and conditions.]]>').up()\n          .up()\n          let fares_layer = deal_set.ele('Fares');\n          if(f_type === 'Miles'){\n            item[\"price_types\"].map((item2) => {\n              if(item[\"default\"]===true){\n                fares_layer.ele('Row', {'fareType': f_type, 'showAsDefault' : 'true'})\n                .ele('Cell','<Data>'+item[\"origin_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"origin_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item[\"destination_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"destination_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item2[\"price\"]+'</Data>').up()\n                .ele('Cell','<Data>'+item2[\"taxes\"]+'</Data>').up()\n              }else{\n                fares_layer.ele('Row', {'fareType': f_type})\n                .ele('Cell','<Data>'+item[\"origin_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"origin_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item[\"destination_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"destination_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item2[\"price\"]+'</Data>').up()\n                .ele('Cell','<Data>'+item2[\"taxes\"]+'</Data>').up()\n              }\n            });\n          }else{\n            item[\"price_types\"].map((item2) => {\n              if(item[\"default\"]===true && item2['fare_type'] === \"Saver\"){\n                fares_layer.ele('Row', {'fareType': item2['fare_type'], 'showAsDefault' : 'true'})\n                .ele('Cell','<Data>'+item[\"origin_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"origin_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item[\"destination_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"destination_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item2[\"price\"]+'</Data>').up()\n              }else{\n                fares_layer.ele('Row', {'fareType': item2['fare_type']})\n                .ele('Cell','<Data>'+item[\"origin_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"origin_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item[\"destination_code\"]+'</Data>').up()\n                .ele('Cell','<Data>'+returnMyCityName(item[\"destination_code\"])+'</Data>').up()\n                .ele('Cell','<Data>'+item2[\"price\"]+'</Data>').up()\n              }\n            });\n          }\n\n\n      });\n\n\n      let element = doc.toString({pretty: true});\n      element = element.replace(/&lt;/g, '<');\n      element = element.replace(/&gt;/g, '>');\n\n      this.setState({\n        xmloutput: element\n      });\n\n    }\n\n\n\n  }\n\n\n\n  moveExceptionsOut(){\n\n    let newPulledExceptionFares = this.state.pulled_exception_fares.slice();\n    let array_all_combined_prices = [...this.state.combined_saver_and_main];\n    let newAllMyFares = this.state.combined_saver_and_main.slice();\n    let newAllMyExceptions = this.state.exceptions.slice();\n\n\n    console.log(this.state.exceptions.length);\n\n    if(this.state.exceptions.length <= 0){\n      this.createMyXml(this.state.combined_saver_and_main, null, false, false);\n    }else{\n\n      newAllMyFares.map((item1, index1) => {\n        newAllMyExceptions.map((item2, index2) => {\n\n          if(item1[\"origin_code\"] === item2[\"code_origin\"] && item1[\"destination_code\"] === item2[\"code_destination\"]){\n\n            let index = array_all_combined_prices.indexOf(item1);\n\n            if (index !== -1) {\n              //Removes this fare from all_my_fares\n              array_all_combined_prices.splice(index, 1);\n\n              newPulledExceptionFares.push({\n                ...item1,\n                days_available: item2[\"travel_valid\"],\n                service_begins: item2[\"service_begins\"],\n                service_ends: item2[\"service_ends\"],\n                service_start_string: item2[\"service_begins_string\"],\n                service_end_string: item2[\"service_end_string\"]\n              });\n\n              this.setState({\n                combined_saver_and_main: array_all_combined_prices,\n                pulled_exception_fares: newPulledExceptionFares\n              }, () => this.createMyXml(this.state.combined_saver_and_main, this.state.pulled_exception_fares, true));\n\n\n\n              this.createMyXml(this.state.combined_saver_and_main, this.state.pulled_exception_fares, true, false);\n\n              console.log(\"Fare Removed from Index: \"+index1);\n            }\n\n          }\n        });\n      });\n\n    }\n\n\n  }\n\n\n  verifyThatExceptionsIsNotEmpty(){\n\n    let newAllMyExceptions = this.state.exceptions.slice();\n    let array_all_exceptions = [...this.state.exceptions];\n\n    //console.log(newAllMyExceptions[0]);\n\n    newAllMyExceptions.map((theitem, myindex) => {\n      if(theitem[\"code_origin\"] === \"\"){\n        //if (myindex !== -1) {\n          array_all_exceptions.splice(myindex, 1);\n\n          this.setState({\n            exceptions: array_all_exceptions\n          }, () => this.moveExceptionsOut());\n        //}\n      }else{\n        this.moveExceptionsOut();\n      }\n    });\n\n\n  }\n\n\n\n\n  //FORM BUTTON CLICK HANDLER\n  createSaleDetails(e){\n    e.preventDefault();\n\n    if(this.state.club49_sheet === true){\n      this.createMyXml(this.state.combined_club_49, null, false, true);\n    }else{\n      this.verifyThatExceptionsIsNotEmpty();\n    }\n\n\n  }\n\n\n\n  // myFunction(xml) {\n  //   var xmlDoc = xml.responseXML;\n  //   var root = xmlDoc.documentElement;\n  //   var currNode = root.childNodes[1];\n  //   var removedNode = currNode.removeChild(currNode.childNodes[1]);\n  //   console.log(removedNode.nodeName);\n  // }\n\n\n  cleanFile = () => () => {\n\n\n    let array = [...this.state.xml_response];\n    let i = array.length;\n    let newCleanArray = [];\n\n    array.map((item, index) => {\n\n      let deal_set_code = item.children[0].attributes[\"code\"];\n      let exp_date = item.attributes[\"to\"];\n\n      exp_date = new Date(exp_date);\n      let right_now = new Date();\n\n        if(exp_date > right_now){\n         // array.splice(index, 1);\n          newCleanArray.push(item);\n        }else{\n          console.log(deal_set_code);\n          console.log(exp_date);\n        }\n    });\n\n    this.setState({\n      clean: newCleanArray\n    });\n\n\n    // let doc2 = builder.create('FlightDeals', { encoding: 'UTF-8'})\n    //   .att('xmlns:ss', 'urn:schemas-microsoft-com:office:spreadsheet')\n\n    // const clean_copy = this.state.clean.splice();\n    // const updatedItems = clean_copy.map((item) => {\n    //   doc2.ele(item)\n    // });\n\n    // //doc2.toString({pretty: true});\n\n    // let element2 = doc2.toString({pretty: true});\n\n    // this.setState({\n    //   clean: element2\n    // })\n\n    //console.log(this.state);\n  }\n\n\n\n  camelCaseCity = (cityname) => {\n    for(let i = 0; i < city_caps_conversion.length; i++){\n      let myitem = city_caps_conversion[i].AVFM_name;\n      let mycityname = city_caps_conversion[i].City_Name;\n      if(myitem === cityname){\n        return mycityname;\n      }\n    }\n  }\n\n\n\n\n\n\n  onFileChange(e, file) {\n\n    file = file || e.target.files[0];\n\n    let split_name = [];\n    let myfilename = file.name;\n    myfilename = myfilename.substring(0, myfilename.indexOf(\".\"));\n    if(myfilename.indexOf(\" \") > -1){\n      split_name[0] = myfilename.substring(myfilename.indexOf(\" \"), myfilename.length).trim();\n      split_name[1] = myfilename.substring(0, myfilename.indexOf(\" \"));\n\n    }else{\n      split_name[0] = myfilename;\n    }\n\n    // console.log(split_name);\n    this.setState({\n      file_name: split_name[0]\n    });\n\n\n\n    //Sheet 1 Looper\n    readXlsxFile(file, { sheet: 1 }).then((data) => {\n      //Loops through every row in the sheet\n\n      //CLUB 49 ONLY\n      let index_of_travel_from_to_us = null;\n      let index_of_travel_from_within_alaska = null;\n      let index_of_travel_by_to_us = null;\n      let index_of_travel_by_within_alaska = null;\n      //CLUB 49 ONLY\n\n      for(let index = 0; index < data.length; index++){\n\n        //console.log(data[index]);\n\n        //CLUB 49 ONLY\n        if(data[index][0] === 'Travel From:'){\n          index_of_travel_from_to_us  = index+1;\n          index_of_travel_from_within_alaska = index+1;\n\n          this.setState({\n            club49_sheet: true\n          });\n        }\n\n        if(data[index][0] === 'Within Alaska'){\n          this.setState({\n            club49_sheet: true\n          });\n        }\n\n\n        if(this.state.club49_sheet === true && data[index][0] === 'Advance Purchase:'){\n          index_of_travel_by_to_us  = index-2;\n          index_of_travel_by_within_alaska = index-1;\n        }\n\n        //CLUB 49 ONLY\n\n\n\n        // SALE_TYPE (Col 7)\n        if(data[index][0] === 'OW SALE:' && data[index][1] !== null){\n          this.setState({\n            sale_type: data[index][1]\n          });\n        }else{\n          this.setState({\n            sale_type: this.state.file_name\n          });\n        }\n\n\n        // SALE_OBJECTIVE (Col 8)\n        if(data[index][0] === 'Sale Objective:' && data[index][1] !== null){\n          this.setState({\n            sale_objective: data[index][1]\n          });\n        }else{\n          this.setState({\n            sale_objective: this.state.file_name\n          });\n        }\n\n\n        //console.log(data[index]);\n        //Get Sale Start Date from Sheet 1 and set state for sale_start_date variables\n        if(data[index][0] === 'Sale Start Date:' && data[index][1] !== null){\n          //console.log(data[index]);\n          let temp_string = moment(data[index][1]).format('YYYY-MM-DD');\n          this.setState({\n            sale_start_date: data[index][1],\n            sale_start_date_string: temp_string\n          });\n        }\n        //Get Purchase By date from Sheet 1 and set state for sale_end_date variables\n        if(data[index][0] === 'Purchase By:' && data[index][1] !== null){\n          //console.log(data[index]);\n          let temp_string = moment(data[index][1]).format('YYYY-MM-DD');\n          this.setState({\n            sale_end_date: data[index][1],\n            sale_end_date_string: temp_string\n          });\n        }\n        //Get Advance Purchase Days from Sheet 1 and set state for advance_purchase variable\n        if(data[index][0] === 'Advance Purchase:' && data[index][1] !== null){\n          //console.log(data[index]);\n          this.setState({\n            advance_purchase: data[index][1]\n          });\n        }\n        //Get Travel Start Date from Sheet 1 and set state for all travel_start variables\n        if(data[index][0] === 'Travel Start:' && data[index][1] !== null){\n          //console.log(data[index]);\n          let temp_string = moment(data[index][1]).format('YYYY-MM-DD');\n          this.setState({\n            travel_start_alaska_to_from_hawaii: data[index][1],\n            travel_start_alaska_to_from_hawaii_string: temp_string,\n            travel_start_hawaii: data[index][1],\n            travel_start_hawaii_string: temp_string,\n            travel_start_mexico: data[index][1],\n            travel_start_mexico_string: temp_string,\n            travel_start_costa_rica: data[index][1],\n            travel_start_costa_rica_string: temp_string,\n            travel_start_florida: data[index][1],\n            travel_start_florida_string: temp_string,\n            travel_start_others: data[index][1],\n            travel_start_others_string: temp_string\n          });\n        }\n\n        //Get Completed Travel By Date from Sheet 1 and set state for all travel_end variables\n        if(data[index][0] === 'Complete Travel By:' && data[index][1] !== null){\n          //console.log(data[index]);\n          let temp_string = moment(data[index][1]).format('YYYY-MM-DD');\n          this.setState({\n            travel_end_alaska_to_from_hawaii: data[index][1],\n            travel_end_alaska_to_from_hawaii_string: temp_string,\n            travel_end_hawaii: data[index][1],\n            travel_end_hawaii_string: temp_string,\n            travel_end_mexico: data[index][1],\n            travel_end_mexico_string: temp_string,\n            travel_end_costa_rica: data[index][1],\n            travel_end_costa_rica_string: temp_string,\n            travel_end_florida: data[index][1],\n            travel_end_florida_string: temp_string,\n            travel_end_others: data[index][1],\n            travel_end_others_string: temp_string\n          });\n        }\n\n\n\n        //Get Proposed Calendar Dates - PAE\n        if(data[index][0] === 'Calendar Dates - PAE' && data[index][1] !== null){\n          let temp_string_start = moment(data[index-1][1]).format('YYYY-MM-DD');\n          let temp_string_end = moment(data[index][1]).format('YYYY-MM-DD');\n\n          this.setState({\n            proposed_start_pae: data[index-1][1],\n            proposed_start_pae_string: temp_string_start,\n            proposed_end_pae: data[index][1],\n            proposed_end_pae_string: temp_string_end\n          });\n        }\n\n\n        //Get Proposed Calendar Dates - HAWAII\n        if(data[index][0] === 'Calendar Dates - Hawaii' && data[index][1] !== null){\n          let temp_string_start = moment(data[index-1][1]).format('YYYY-MM-DD');\n          let temp_string_end = moment(data[index][1]).format('YYYY-MM-DD');\n\n          this.setState({\n            proposed_start_hawaii: data[index-1][1],\n            proposed_start_hawaii_string: temp_string_start,\n            proposed_end_hawaii: data[index][1],\n            proposed_end_hawaii_string: temp_string_end\n          });\n        }\n\n\n        //Get Proposed Calendar Dates - OTHERS\n        if(data[index][0] === 'Calendar Dates - All' && data[index][1] !== null){\n          let temp_string_start = moment(data[index-1][1]).format('YYYY-MM-DD');\n          let temp_string_end = moment(data[index][1]).format('YYYY-MM-DD');\n\n          this.setState({\n            proposed_start_others: data[index-1][1],\n            proposed_start_others_string: temp_string_start,\n            proposed_end_others: data[index][1],\n            proposed_end_others_string: temp_string_end\n          });\n        }\n\n\n\n\n\n\n        //Get BALCKOUTS\n        if(data[index][0] === 'Blackouts:' && data[index][1] !== null){\n\n          if(data[index][1].indexOf('to') > -1){\n\n              let temp_array = [];\n              let temp_blackout = data[index][1];\n              temp_array = temp_blackout.split(\" to \");\n\n              if(temp_array.length === 2){\n                let temp_blackout_start_date = new Date(temp_array[0]);\n                let temp_blackout_start_date_string = moment(temp_blackout_start_date).format('YYYY-MM-DD');\n\n                let temp_blackout_end_date = new Date(temp_array[1]);\n                let temp_blackout_end_date_string = moment(temp_blackout_end_date).format('YYYY-MM-DD');\n\n                this.setState({\n                  blackout_start_alaska_to_from_hawaii: temp_blackout_start_date,\n                  blackout_start_alaska_to_from_hawaii_string: temp_blackout_start_date_string,\n                  blackout_end_alaska_to_from_hawaii: temp_blackout_end_date,\n                  blackout_end_alaska_to_from_hawaii_string: temp_blackout_end_date_string,\n\n                  blackout_start_from_hawaii: temp_blackout_start_date,\n                  blackout_start_from_hawaii_string: temp_blackout_start_date_string,\n                  blackout_end_from_hawaii: temp_blackout_end_date,\n                  blackout_end_from_hawaii_string: temp_blackout_end_date_string,\n\n                  blackout_start_to_hawaii: temp_blackout_start_date,\n                  blackout_start_to_hawaii_string: temp_blackout_start_date_string,\n                  blackout_end_to_hawaii: temp_blackout_end_date,\n                  blackout_end_to_hawaii_string: temp_blackout_end_date_string,\n\n                  blackout_start_costa_rica: temp_blackout_start_date,\n                  blackout_start_costa_rica_string: temp_blackout_start_date_string,\n                  blackout_end_costa_rica: temp_blackout_end_date,\n                  blackout_end_costa_rica_string: temp_blackout_end_date_string,\n\n                  blackout_start_mexico: temp_blackout_start_date,\n                  blackout_start_mexico_string: temp_blackout_start_date_string,\n                  blackout_end_mexico: temp_blackout_end_date,\n                  blackout_end_mexico_string: temp_blackout_end_date_string,\n\n                  blackout_start_others: temp_blackout_start_date,\n                  blackout_start_others_string: temp_blackout_start_date_string,\n                  blackout_end_others: temp_blackout_end_date,\n                  blackout_end_others_string: temp_blackout_end_date_string,\n\n                });\n              }\n            }else if(data[index][1].indexOf('-') > -1){\n\n              let temp_array = [];\n              let temp_blackout = data[index][1];\n              temp_array = temp_blackout.split(\"-\");\n\n              if(temp_array.length === 2){\n                let temp_blackout_start_date = new Date(temp_array[0]);\n                let temp_blackout_start_date_string = moment(temp_blackout_start_date).format('YYYY-MM-DD');\n\n                let temp_blackout_end_date = new Date(temp_array[1]);\n                let temp_blackout_end_date_string = moment(temp_blackout_end_date).format('YYYY-MM-DD');\n\n                this.setState({\n                  blackout_start_alaska_to_from_hawaii: temp_blackout_start_date,\n                  blackout_start_alaska_to_from_hawaii_string: temp_blackout_start_date_string,\n                  blackout_end_alaska_to_from_hawaii: temp_blackout_end_date,\n                  blackout_end_alaska_to_from_hawaii_string: temp_blackout_end_date_string,\n\n                  blackout_start_from_hawaii: temp_blackout_start_date,\n                  blackout_start_from_hawaii_string: temp_blackout_start_date_string,\n                  blackout_end_from_hawaii: temp_blackout_end_date,\n                  blackout_end_from_hawaii_string: temp_blackout_end_date_string,\n\n                  blackout_start_to_hawaii: temp_blackout_start_date,\n                  blackout_start_to_hawaii_string: temp_blackout_start_date_string,\n                  blackout_end_to_hawaii: temp_blackout_end_date,\n                  blackout_end_to_hawaii_string: temp_blackout_end_date_string,\n\n                  blackout_start_costa_rica: temp_blackout_start_date,\n                  blackout_start_costa_rica_string: temp_blackout_start_date_string,\n                  blackout_end_costa_rica: temp_blackout_end_date,\n                  blackout_end_costa_rica_string: temp_blackout_end_date_string,\n\n                  blackout_start_mexico: temp_blackout_start_date,\n                  blackout_start_mexico_string: temp_blackout_start_date_string,\n                  blackout_end_mexico: temp_blackout_end_date,\n                  blackout_end_mexico_string: temp_blackout_end_date_string,\n\n                  blackout_start_others: temp_blackout_start_date,\n                  blackout_start_others_string: temp_blackout_start_date_string,\n                  blackout_end_others: temp_blackout_end_date,\n                  blackout_end_others_string: temp_blackout_end_date_string,\n\n                });\n            }else{\n              alert(\"NO MATCHING BLACKOUT DATES FOUND!\");\n            }\n\n          }else{\n            alert(\"MULTIPLE BLACKOUT DATES FOUND!\");\n          }\n\n        }\n\n\n\n\n\n\n\n\n      }//end of for loop\n\n      //Get CLUB49 TO U.S Travel Dates\n      if(index_of_travel_from_to_us > 1){\n        let temp_string = moment(data[index_of_travel_from_to_us][1]).format('YYYY-MM-DD');\n        this.setState({\n          travel_from_to_us : data[index_of_travel_from_to_us][1],\n          travel_from_to_us_string : temp_string\n        });\n      }\n      if(index_of_travel_by_to_us > 1){\n        if(data[index_of_travel_by_to_us][0] === \"To U.S.\"){\n          let temp_string = moment(data[index_of_travel_by_to_us][1]).format('YYYY-MM-DD');\n          this.setState({\n            travel_by_to_us : data[index_of_travel_by_to_us][1],\n            travel_by_to_us_string : temp_string\n          });\n        }\n      }\n\n      if(index_of_travel_from_within_alaska > 1){\n        let temp_string = moment(data[index_of_travel_from_within_alaska][1]).format('YYYY-MM-DD');\n        this.setState({\n          travel_from_within_alaska : data[index_of_travel_from_within_alaska][1],\n          travel_from_within_alaska_string : temp_string\n        });\n      }\n      if(index_of_travel_by_within_alaska > 1){\n        //if(data[index_of_travel_by_within_alaska][0] === \"Within Alaska\"){\n          let temp_string = moment(data[index_of_travel_by_within_alaska][1]).format('YYYY-MM-DD');\n          this.setState({\n            travel_by_within_alaska : data[index_of_travel_by_within_alaska][1],\n            travel_by_within_alaska_string : temp_string\n          });\n        //}\n      }\n      //Get CLUB49 WITHIN ALASKA Travel Dates\n\n\n\n\n\n\n\n\n\n\n      // let newArray = this.state.all_my_fares.slice();\n      // newArray.push({\n      //   id: i,\n      //   name: data[i][0],\n      //   group: mygroup,\n      //   default: false,\n      //   origin_code:data[i][2],\n      //   origin_city:this.camelCaseCity(data[i][3]),\n      //   destination_code:data[i][4],\n      //   destination_city:this.camelCaseCity(data[i][5]),\n      //   price:data[i][6],\n      //   fare_type:data[i][11],\n      //   fare_class_code:data[i][7],\n      //   filed_fare:data[i][8],\n      //   taxes:data[i][9],\n      //   shortened_region:data[i][10],\n      //   round_trip:data[i][12],\n      // });\n      // this.setState({\n      //   all_my_fares:newArray\n      // });\n\n\n\n\n\n    })//end of readXlsxFile for Sheet 1\n\n\n          let sheet_name= '';\n          if(this.state.club49_sheet === true){\n            sheet_name = 21;\n          }else if(this.state.club49_sheet === false){\n            sheet_name = this.state.hidden_sheet;\n          }else{\n            sheet_name = this.state.hidden_sheet;\n          }\n\n\n\n        //US Ad Fare Sheet Looper\n        readXlsxFile(file, { sheet: sheet_name }).then((data) => {\n              //Loops through every row in the sheet\n\n\n          if(this.state.selectedOption === 'Saver'){\n\n              for(let i = 0; i < data.length; i++){\n\n                if(this.state.club49_sheet === true){\n                }else{\n                    //Get number of Distinct OD from the US Ad Fare Sheet TAB\n                    if(data[i].indexOf(\"Distinct ODs:\") > -1){\n                      this.setState({\n                        number_of_distinct_od: data[i][data[i].indexOf(\"Distinct ODs:\")+1]\n                      });\n                      //console.log(this.state.number_of_distinct_od);\n                    }\n                }\n\n\n                // console.log(\"DATA[i][0] = \", data[i][0])\n\n\n\n                if (typeof data[i][0] === 'string' && data[i][0] !== null) {\n\n\n\n                  //Checks that the values in index 0 and 2 are airport codes for every row in the spreadsheet\n                  if(typeof data[i][2] == 'string' && (data[i][2].length === 3 && data[i][4].length === 3)){\n\n                    let my_fare_type = data[i][11];\n\n                    // console.log(data[i][2].length);\n\n                    let mygroup = \"\";\n                    if( (groupMeByOrigin(data[i][2]) === \"ALASKA\" && groupMeByOrigin(data[i][4]) === \"HAWAII\") || (groupMeByOrigin(data[i][2]) === \"HAWAII\" && groupMeByOrigin(data[i][4]) === \"ALASKA\") ){\n                        mygroup = \"ALASKA_HAWAII\";\n                    }else if(groupMeByOrigin(data[i][2]) === \"ALASKA\" && groupMeByOrigin(data[i][4]) === \"ALASKA\"){\n                        //CLUB49 UPPER\n                        mygroup = \"ALASKA_ALASKA\";\n                    }else if(groupMeByOrigin(data[i][2]) === \"ALASKA\"){\n                        //CLUB49 LOWER\n                        mygroup = \"FROM_ALASKA\";\n                    }else if(groupMeByOrigin(data[i][4]) === \"ALASKA\"){\n                        mygroup = \"TO_ALASKA\";\n                    }else if(groupMeByOrigin(data[i][2]) === \"HAWAII\"){\n                        mygroup = \"FROM_HAWAII\";\n                    }else if(groupMeByOrigin(data[i][4]) === \"HAWAII\"){\n                        mygroup = \"TO_HAWAII\";\n                    }else if(groupMeByOrigin(data[i][2]) === \"MEXICO\" || groupMeByOrigin(data[i][2]) === \"COSTA_RICA\"){\n                        mygroup = \"\";\n                        console.log(\"THERE SHOULD NOT BE FARES THAT ORIGINATE FROM MEXICO OR COSTA RICA!\");\n                    }else if(groupMeByOrigin(data[i][4]) === \"MEXICO\"){\n                        mygroup = \"MEXICO\";\n                    }else if(groupMeByOrigin(data[i][4]) === \"COSTA_RICA\"){\n                        mygroup = \"COSTA_RICA\";\n                    }else if(groupMeByOrigin(data[i][2]) === \"FLORIDA\"){\n                        mygroup = \"FROM_FLORIDA\";\n                    }else if(groupMeByOrigin(data[i][4]) === \"FLORIDA\"){\n                        mygroup = \"TO_FLORIDA\";\n                    }else if(groupMeByOrigin(data[i][2]) === \"PAE\" || groupMeByOrigin(data[i][4]) === \"PAE\"){\n                        mygroup = \"PAE\";\n                    }else if(groupMeByOrigin(data[i][4]) === \"OTHER_MARKET\"){\n                        mygroup = \"OTHER_MARKET\";\n                    }else{\n                      mygroup = \"\";\n                      console.log(\"NO GROUP WAS FOUND FOR \" +data[i][2]+data[i][4]);\n                    }\n\n\n                    //console.log(data[i]);\n                    let newArray = this.state.all_my_fares.slice();\n\n\n                    if(my_fare_type === \"SAVER\"){\n                      my_fare_type = \"Saver\";\n                    }else{\n                      my_fare_type = \"Main\";\n                    }\n\n\n\n                    newArray.push({\n                      id: i,\n                      name: data[i][0],\n                      group: mygroup,\n                      default: false,\n                      origin_code:data[i][2],\n                      origin_city:this.camelCaseCity(data[i][3]),\n                      destination_code:data[i][4],\n                      destination_city:this.camelCaseCity(data[i][5]),\n                      price:data[i][6],\n                      fare_type: my_fare_type,\n                      fare_class_code:data[i][7],\n                      filed_fare:data[i][8],\n                      taxes:data[i][9],\n                      shortened_region:data[i][10],\n                      round_trip:data[i][12],\n                    });\n                    this.setState({\n                      all_my_fares:newArray\n                    });\n\n\n\n                  }\n\n\n                }\n              }//end of for loop\n\n          }else{\n\n              for(let i = 0; i < data.length; i++){\n\n\n                // console.log(\"INSIDE THE OTHER FORLOOP\")\n\n                if (typeof data[i][0] === 'string' && data[i][0] !== null) {\n\n                  //Checks that the values in index 0 and 2 are airport codes for every row in the spreadsheet\n                  if(typeof data[i][2] == 'string' && (data[i][2].length === 3 && data[i][4].length === 3)){\n                    //console.log(data[i]);\n                    let mygroup = \"\";\n                    if( (groupMeByOrigin(data[i][2]) === \"ALASKA\" && groupMeByOrigin(data[i][4]) === \"HAWAII\") || (groupMeByOrigin(data[i][2]) === \"HAWAII\" && groupMeByOrigin(data[i][4]) === \"ALASKA\") ){\n                        mygroup = \"ALASKA_HAWAII\";\n                    }else if(groupMeByOrigin(data[i][2]) === \"ALASKA\" && groupMeByOrigin(data[i][4]) === \"ALASKA\"){\n                        //CLUB49 UPPER\n                        mygroup = \"ALASKA_ALASKA\";\n                    }else if(groupMeByOrigin(data[i][2]) === \"ALASKA\"){\n                        //CLUB49 LOWER\n                        mygroup = \"FROM_ALASKA\";\n                    }else if(groupMeByOrigin(data[i][4]) === \"ALASKA\"){\n                        mygroup = \"TO_ALASKA\";\n                    }else if(groupMeByOrigin(data[i][2]) === \"HAWAII\"){\n                        mygroup = \"FROM_HAWAII\";\n                    }else if(groupMeByOrigin(data[i][4]) === \"HAWAII\"){\n                        mygroup = \"TO_HAWAII\";\n                    }else if(groupMeByOrigin(data[i][2]) === \"MEXICO\" || groupMeByOrigin(data[i][2]) === \"COSTA_RICA\"){\n                        console.log(\"THERE SHOULD NOT BE FARES THAT ORIGINATE FROM MEXICO OR COSTA RICA!\");\n                    }else if(groupMeByOrigin(data[i][4]) === \"MEXICO\"){\n                        mygroup = \"MEXICO\";\n                    }else if(groupMeByOrigin(data[i][4]) === \"COSTA_RICA\"){\n                        mygroup = \"COSTA_RICA\";\n                    }else if(groupMeByOrigin(data[i][2]) === \"FLORIDA\"){\n                        mygroup = \"FROM_FLORIDA\";\n                    }else if(groupMeByOrigin(data[i][4]) === \"FLORIDA\"){\n                        mygroup = \"TO_FLORIDA\";\n                    }else if(groupMeByOrigin(data[i][2]) === \"PAE\" || groupMeByOrigin(data[i][4]) === \"PAE\"){\n                        mygroup = \"PAE\";\n                    }else if(groupMeByOrigin(data[i][4]) === \"OTHER_MARKET\"){\n                        mygroup = \"OTHER_MARKET\";\n                    }else{\n                      console.log(\"NO GROUP WAS FOUND FOR \" +data[i][2]+data[i][4]);\n                    }\n\n\n                    //console.log(data[i]);\n                    let newArray = this.state.all_my_fares.slice();\n                    // let my_fare_type = data[i][11];\n                    // if(my_fare_type === \"SAVER\"){\n                    //   my_fare_type = \"Saver\";\n                    // }else{\n                    //   my_fare_type = \"Main\";\n                    // }\n\n\n                      newArray.push({\n                        id: i,\n                        name: data[i][0],\n                        group: mygroup,\n                        default: false,\n                        origin_code:data[i][2],\n                        origin_city:this.camelCaseCity(data[i][3]),\n                        destination_code:data[i][4],\n                        destination_city:this.camelCaseCity(data[i][5]),\n                        price:data[i][6],\n                        fare_type: null,\n                        fare_class_code:null,\n                        taxes:data[i][8],\n                        shortened_region: null,\n                        round_trip:data[i][10],\n                      });\n                      this.setState({\n                        all_my_fares:newArray\n                      });\n\n\n\n\n                  }\n\n\n                }\n\n              }//End of forloop for Award Sale\n\n\n          }\n\n\n\n          let temp_arr = this.state.all_my_fares.slice();\n          temp_arr.sort(compareDestinationCode); //SORT by Destination Code first for alphabetical\n          temp_arr.sort(compareOriginCode); //SORT by Origin Code second for alphabetical\n          temp_arr.sort(comparePrice); //SORT by Price last for lowest to highest fares\n\n          this.setState({\n            all_my_fares:temp_arr\n          });\n\n\n          let temp_combined = this.state.combined_saver_and_main.slice();\n          let temp_combined_club49 = this.state.all_my_fares.slice();\n\n          if(this.state.club49_sheet === true){\n            //Get the tuesday after the travel start date\n            console.log(\"CLUB 49 Calendar Dates : START :\"+getMyFirstTuesday(this.state.travel_from_to_us, 2));\n            console.log(\"CLUB 49 Calendar Dates : END :\"+getMySecondTuesday(this.state.travel_from_to_us, 2));\n\n            let temp_string1 = moment(getMyFirstTuesday(this.state.travel_from_to_us, 2)).format('YYYY-MM-DD');\n            let temp_string2 = moment(getMySecondTuesday(this.state.travel_from_to_us, 2)).format('YYYY-MM-DD');\n\n            this.setState({\n              proposed_from_clu49: getMyFirstTuesday(this.state.travel_from_to_us, 2),\n              proposed_to_clu49: getMySecondTuesday(this.state.travel_from_to_us, 2),\n              proposed_from_clu49_string: temp_string1,\n              proposed_to_clu49_string: temp_string2\n            });\n\n\n\n            temp_combined_club49 = mergeClub49(this.state.all_my_fares);\n\n            this.setState({\n              combined_club_49: temp_combined_club49\n            });\n\n          }else{\n            temp_combined = mergeObjects(this.state.all_my_fares);\n\n            this.setState({\n              combined_saver_and_main: temp_combined\n            });\n          }\n\n        })//end of readXlsxFile for US Ad Fare Sheet\n\n\n\n    if(this.state.selectedOption === 'Saver'){\n    //Email Marketing Sheet Looper\n      readXlsxFile(file, { sheet: 3 }).then((data) => {\n        //Loops through every row in the sheet\n        let lowest_sea = null;\n        let lowest_pdx = null;\n        let lowest_bay = null;\n        let lowest_la = null;\n        let lowest_no_pdc = null;\n\n\n\n        for(let i = 0; i < data.length; i++){\n\n          //Get Lowest Price Points EMAIL MARKETING\n          if(data[i].indexOf(\"From:\") > -1){\n            // console.log(data[i][data[i].indexOf(\"From:\")]);\n            // console.log(i);\n            lowest_sea = i + 1;\n            lowest_pdx = i + 2;\n            lowest_bay = i + 3;\n            lowest_la = i + 4;\n            lowest_no_pdc =  i + 5;\n            // this.setState({\n            //   number_of_distinct_od: data[i][data[i].indexOf(\"Distinct ODs:\")+1]\n            // });\n            //console.log(this.state.number_of_distinct_od);\n          }\n\n          if(i === lowest_sea){\n            // console.log(data[i][9] + \"====\"+ data[i][10]);\n            this.setState({\n              lowest_price_sea: data[i][9]+data[i][10]\n            })\n          }\n          if(i === lowest_pdx){\n            // console.log(data[i][9] + \"====\"+ data[i][10]);\n            this.setState({\n              lowest_price_pdx: data[i][9]+data[i][10]\n            })\n          }\n          if(i === lowest_bay){\n            // console.log(data[i][9] + \"====\"+ data[i][10]);\n            this.setState({\n              lowest_price_bay: data[i][9]+data[i][10]\n            })\n          }\n          if(i === lowest_la){\n            // console.log(data[i][9] + \"====\"+ data[i][10]);\n            this.setState({\n              lowest_price_la: data[i][9]+data[i][10]\n            })\n          }\n          if(i === lowest_no_pdc){\n            // console.log(data[i][9] + \"====\"+ data[i][10]);\n            this.setState({\n              lowest_price_no_pdc: data[i][9]+data[i][10]\n            })\n          }\n\n        }\n\n      })//end of readXlsxFile for US Ad Fare Sheet\n    }else{\n      readXlsxFile(file, { sheet: 5 }).then((data) => {\n        //Loops through every row in the sheet\n        let lowest_sea = null;\n        let lowest_pdx = null;\n        let lowest_bay = null;\n        let lowest_la = null;\n        let lowest_no_pdc = null;\n\n\n\n        for(let i = 0; i < data.length; i++){\n\n          //Get Lowest Price Points EMAIL MARKETING\n          if(data[i].indexOf(\"From:\") > -1){\n            // console.log(data[i][data[i].indexOf(\"From:\")]);\n            // console.log(i);\n            lowest_sea = i + 1;\n            lowest_pdx = i + 2;\n            lowest_bay = i + 3;\n            lowest_la = i + 4;\n            lowest_no_pdc =  i + 5;\n            // this.setState({\n            //   number_of_distinct_od: data[i][data[i].indexOf(\"Distinct ODs:\")+1]\n            // });\n            //console.log(this.state.number_of_distinct_od);\n          }\n\n          if(i === lowest_sea){\n            // console.log(data[i][8] + \"====\"+ data[i][9]);\n            this.setState({\n              lowest_price_sea: data[i][8]+data[i][9]\n            })\n          }\n          if(i === lowest_pdx){\n            // console.log(data[i][8] + \"====\"+ data[i][9]);\n            this.setState({\n              lowest_price_pdx: data[i][8]+data[i][9]\n            })\n          }\n          if(i === lowest_bay){\n            // console.log(data[i][8] + \"====\"+ data[i][9]);\n            this.setState({\n              lowest_price_bay: data[i][8]+data[i][9]\n            })\n          }\n          if(i === lowest_la){\n            // console.log(data[i][8] + \"====\"+ data[i][9]);\n            this.setState({\n              lowest_price_la: data[i][8]+data[i][9]\n            })\n          }\n          if(i === lowest_no_pdc){\n            // console.log(data[i][8] + \"====\"+ data[i][9]);\n            this.setState({\n              lowest_price_no_pdc: data[i][8]+data[i][9]\n            })\n          }\n\n        }\n\n      })//end of readXlsxFile for US Ad Fare Sheet / AWARD SALE TYPE\n    }\n\n\n    //Only read AS.com tab if its a saver spreadsheet\n    if(this.state.selectedOption === 'Saver'){\n\n      let ascom_sheet= '';\n      if(this.state.club49_sheet === true){\n        ascom_sheet = 'AS.com';\n      }else{\n        ascom_sheet = 'AS.com';\n      }\n\n      // //AS.com TAB Looper\n      readXlsxFile(file, { sheet: ascom_sheet }).then((data) => {\n        //Loops through every row in the sheet\n\n            for(let i = 0; i < data.length; i++){\n\n              if(data[i][17] !== null && data[i][18] !== null){\n                if(typeof data[i][17] == 'string' && typeof data[i][18] == 'number'){\n                // console.log(data[i][17] + \" : \" + data[i][18]);\n\n                  this.markAsDefault(data[i][17]);\n                  // this.grabDefaultsFromSheet(data[i][17], data[i][18]);\n                  this.displayData.push(<div className=\"display-data\" style={{fontSize:13, fontWeight:'bold'}}><div className=\"cityPair\" style={{textAlign:'left',marginLeft:80, display:'inline',color:'purple'}}>{data[i][17]}</div><div className=\"cityPrice\" style={{display:'inline',color:'green', marginLeft:120}}>{data[i][18]}</div></div>);\n                  this.setState({\n                    showdata : this.displayData,\n                    postVal : \"\",\n                    textareaedit: false\n                  });\n\n                }\n              }\n\n            }//end of for loop\n\n      })//end of readXlsxFile for Sheet 4\n\n\n    }else{\n      readXlsxFile(file, { sheet: 3 }).then((data) => {\n        //Loops through every row in the sheet\n\n            for(let i = 0; i < data.length; i++){\n\n              if(data[i][16] !== null && data[i][17] !== null){\n                if(typeof data[i][16] == 'string' && typeof data[i][17] == 'number'){\n                // console.log(data[i][17] + \" : \" + data[i][18]);\n\n                  this.markAsDefault(data[i][16]);\n                  // this.grabDefaultsFromSheet(data[i][17], data[i][18]);\n                  this.displayData.push(<div className=\"display-data\" style={{fontSize:13, fontWeight:'bold'}}><div className=\"cityPair\" style={{textAlign:'left',marginLeft:80, display:'inline',color:'purple'}}>{data[i][16]}</div><div className=\"cityPrice\" style={{display:'inline',color:'green', marginLeft:120}}>{data[i][17]}</div></div>);\n                  this.setState({\n                    showdata : this.displayData,\n                    postVal : \"\",\n                    textareaedit: false\n                  });\n\n                }\n              }\n\n            }//end of for loop Award Sale DEFAULTS\n\n      })//end of readXlsxFile for Sheet 4\n    }\n\n\n\n\n\n\n  }\n\n  handleExceptionCodeChange = (idx) => (evt) => {\n    let temp_code = evt.target.value ;\n    temp_code = temp_code.toUpperCase();\n    if(temp_code.length === 6){\n      temp_code = temp_code.match(/.{1,3}/g);\n    }else{\n      temp_code = evt.target.value\n    }\n\n    const newShareholders = this.state.exceptions.map((item, sidx) => {\n      if (idx !== sidx) return item;\n      return {\n        ...item,\n        code_origin: temp_code[0],\n        code_destination: temp_code[1]\n      };\n    });\n    this.setState({\n      exceptions: newShareholders\n    });\n  }\n\n  handleExceptionTravelValid = (idx) => (evt) => {\n    const newShareholders = this.state.exceptions.map((item, sidx) => {\n      if (idx !== sidx) return item;\n      return {\n        ...item,\n        travel_valid: evt.target.value\n      };\n    });\n    this.setState({\n      exceptions: newShareholders\n    });\n  }\n\n  handleExceptionServiceBegins = (idx) => (date) => {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    const newShareholders = this.state.exceptions.map((item, sidx) => {\n      if (idx !== sidx) return item;\n      return {\n        ...item,\n        service_begins: date,\n        begins_string:temp_string,\n      };\n    });\n\n    this.setState({\n      exceptions: newShareholders\n    });\n  }\n  handleExceptionServiceEnds = (idx) => (date) => {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    const newShareholders = this.state.exceptions.map((item, sidx) => {\n      if (idx !== sidx) return item;\n      return {\n        ...item,\n        service_ends: date,\n        ends_string:temp_string,\n      };\n    });\n\n    this.setState({\n      exceptions: newShareholders\n    });\n  }\n\n\n\n\n  handleAddException = () => {\n    this.setState({\n      exceptions: this.state.exceptions.concat([{ code_origin: '', code_destination: '', travel_valid: '', service_begins: null, service_ends: null, begins_string:'', ends_string:'' }])\n    });\n  }\n\n\n  handleRemoveException = (idx) => () => {\n    this.setState({\n      exceptions: this.state.exceptions.filter((s, sidx) => idx !== sidx)\n    });\n  }\n\n\n  resetOutputVariable = () => () => {\n\n   // let newArray = this.state.xmloutput.slice();\n    this.setState({\n      xmloutput:''\n    });\n\n  }\n\n\n\n  travelFromToUSHandler = (date) => {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n\n    this.setState({\n      travel_from_to_us: date,\n      travel_from_to_us_string: temp_string\n    });\n  }\n  travelByToUSHandler = (date) => {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      travel_by_to_us: date,\n      travel_by_to_us_string: temp_string\n    });\n  }\n  daysAvailabilityToUSHandler = (e) => {\n    this.setState({\n      days_availability_to_us: e.target.value\n    });\n  }\n\n\n\n  travelFromWithinAlaskaHandler = (date) => {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n\n    this.setState({\n      travel_from_within_alaska: date,\n      travel_from_within_alaska_string: temp_string\n    });\n  }\n  travelByWithinAlaskaHandler = (date) => {\n    let temp_string = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      travel_by_within_alaska: date,\n      travel_by_within_alaska_string: temp_string\n    });\n  }\n  daysAvailabilityWithinAlaskaHandler = (e) => {\n    this.setState({\n      days_availability_within_alaska: e.target.value\n    });\n  }\n\n\n\n  render() {\n\n    // console.log(this.state.selectedOption);\n\n\n\n    return (\n      <div className=\"App\">\n      <div className=\"\">\n\n        <div className=\"row col-md-12\">\n          {/* <input type = \"text\" value = {this.state.firstinput} onChange = {this.updateFirstInput} /> */}\n\n\n          {/* <CSVDownload data={csvData} filename={\"my-file.csv\"} target=\"_blank\" /> */}\n\n          <form className=\"detailsForm\"  onSubmit={this.createSaleDetails}>\n\n            <div className=\"form-row sale-information\">\n                <div className=\"row col-md-12\">\n                    <div className=\"form-group col-md-2\">\n                      <h3 className=\"information-headline\">Sale Information 2:</h3>\n                    </div>\n                    <div className=\"form-group col-md-2\">\n                      {/* <a href=\"TEMPLATE.xlsx\" download className=\"btn btn-success download-template\">\n                          <i className=\"fa fa-download\"></i> Download Template\n                      </a> */\n                      // https://alaskaair.sharepoint.com/sites/PublishedPricing/Shared%20Documents/Forms/AllItems.aspx?id=%2Fsites%2FPublishedPricing%2FShared%20Documents%2FSales%2FDetail%20and%20Fare%20Dumps\n                      }\n                      <a href=\"https://alaskaair.sharepoint.com/sites/PublishedPricing/Shared%20Documents/Forms/AllItems.aspx?id=%2Fsites%2FPublishedPricing%2FShared%20Documents%2FSales%2FDetail%20and%20Fare%20Dumps\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"sharepoint-link\">\n                          <i className=\"fa fa-upload\"></i> DROP CSV FILES HERE\n                      </a>\n                    </div>\n                    <div className=\"form-group col-md-2\">\n                      <a href=\"https://alaskaair.sharepoint.com/sites/TeamEP/Shared%20Documents/Forms/AllItems.aspx?cid=91ab9bff-77b0-4540-88d4-c8aacfe4cb04&RootFolder=%2Fsites%2FTeamEP%2FShared%20Documents%2F3-Campaigns%2FFare%20Sales%2FWeeklyFlightDeals&FolderCTID=0x012000B3CE6DC9828D0441B10382FB20A01BBC\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"sharepoint-link\">\n                          <i className=\"fa fa-folder\"></i> Sharepoint\n                      </a>\n                    </div>\n\n                    <div className=\"form-group col-md-1\">\n                        <label className=\"radio-inline\">\n                            <input type=\"radio\" name=\"sale_type\" defaultChecked value=\"Saver\" onChange={() => this.setState({selectedOption: 'Saver'})}/> Saver\n                        </label>\n                    </div>\n                    <div className=\"form-group col-md-1\">\n                        <label className=\"radio-inline\">\n                            <input type=\"radio\" name=\"sale_type\" value=\"Mileage\" onChange={() => this.setState({selectedOption: 'Mileage'})} />\n                            Awards Sale\n                        </label>\n\n                    </div>\n                    <div className=\"form-group col-md-3\">\n                      <input type=\"file\" className=\"form-control\" id=\"inputFile\" onChange={this.onFileChange} />\n                      {/* <div className=\"form-group-input\">\n                        <label className=\"label\">\n                          <i className=\"material-icons\">attach_file</i>\n                          <span className=\"title\">Add File</span>\n                          <input type=\"file\" className=\"\" id=\"inputFile\" onChange={this.onFileChange}/>\n                        </label>\n                      </div> */}\n                    </div>\n                    <div className=\"form-group col-md-1\">\n                        <input type=\"text\" className=\"form-control\" id=\"sheet_number\" onChange={this.changeHiddenSheet} placeholder=\"\" value={this.state.hidden_sheet} style={{marginTop:10}}/>\n                    </div>\n\n\n                </div>\n                <div className=\"form-group col-md-3\">\n                    {/* This row is for Sale Start */}\n                    <div className=\"row col-md-12\">\n                      <label htmlFor=\"saleStartDate\"><strong>Sale Start</strong></label><br />\n                      <DatePicker className=\"form-control\" id=\"saleStartDate\" selected={this.state.sale_start_date} onChange={this.saleStartDateHandler} />\n                    </div>\n                    {/* This row is for Sale End */}\n                    <div className=\"row col-md-12\">\n                      <label htmlFor=\"saleEndDate\"><strong>Purchase By</strong></label>\n                      <DatePicker className=\"form-control\" id=\"saleEndDate\" selected={this.state.sale_end_date} onChange={this.saleEndDateHandler} />\n                    </div>\n                    {/* This row is for Advance Purchase */}\n                    <div className=\"row col-md-12\">\n                      <label htmlFor=\"advancePurchase\"><strong>Advance Purchase</strong></label>\n                      <input type=\"text\" className=\"form-control\" id=\"advancePurchase\" value = {this.state.advance_purchase} onChange = {this.advancePurchaseHandler} />\n                    </div>\n\n\n\n                    <div className=\"row col-md-12\">\n                      <div className=\"form-group text-area-div\">\n                        <label htmlFor=\"default_markets\"><strong>Default Markets:</strong></label>\n\n                        {this.state.textareaedit === true ? (\n                          <textarea className=\"form-control rounded-0\" id=\"default_markets\" rows=\"6\" onChange={this.saveDefaultMarkets} ></textarea>\n                        ): (\n                          <div id=\"display-data-Container\" style={{height:165}}>{this.displayData}</div>\n                        )}\n\n                      </div>\n                    </div>\n\n\n                    {/* This row is for Proposed PAE Dates */}\n                    <div className=\"row col-md-12\">\n\n                      <div className=\"col-md-12 remove-padding\">\n                          <h6 className=\"proposed-headline\"><strong>Proposed Dates:</strong> PAE</h6>\n                      </div>\n                      <div className=\"col-md-5 remove-padding\">\n                          <DatePicker className=\"form-control\" selected={this.state.proposed_start_pae} onChange={this.proposedStartDatePAEHandler} />\n                      </div>\n\n                      <div className=\"col-md-2 text-center\">\n                          <h6 className=\"\">to</h6>\n                      </div>\n\n                      <div className=\"col-md-5 remove-padding\">\n                          <DatePicker className=\"form-control\" selected={this.state.proposed_end_pae} onChange={this.proposedEndDatePAEHandler} />\n                      </div>\n\n                    </div>\n\n\n\n\n                </div>\n\n\n                {/* TRAVEL START INPUTS */}\n                <div className=\"form-group col-md-3\">\n                    {/* This row is for Travel Start: Alaska to/from Hawaii */}\n                    <div className=\"row col-md-12\">\n                      <label htmlFor=\"travel_start_alaska_to_from_hawaii\"><strong>Travel Start:</strong> Alaska to/from Hawaii</label><br />\n                      <DatePicker className=\"form-control\" id=\"travel_start_alaska_to_from_hawaii\" selected={this.state.travel_start_alaska_to_from_hawaii} onChange={this.travelStartAlaskaToFromHawaiiDateHandler} />\n                    </div>\n\n                    {/* This row is for Travel Start: HAWAII */}\n                    <div className=\"row col-md-12\">\n                      <label htmlFor=\"travel_start_hawaii\"><strong>Travel Start:</strong> Hawaii</label><br />\n                      <DatePicker className=\"form-control\" id=\"travel_start_hawaii\" selected={this.state.travel_start_hawaii} onChange={this.travelStartHawaiiHandler} />\n                    </div>\n\n                    {/* This row is for Travel Start: MEXICO */}\n                    <div className=\"row col-md-12\">\n                    <label htmlFor=\"travel_start_mexico\"><strong>Travel Start:</strong> Mexico</label><br />\n                      <DatePicker className=\"form-control\" id=\"travel_start_mexico\" selected={this.state.travel_start_mexico} onChange={this.travelStartMexicoHandler} />\n                    </div>\n\n                    {/* This row is for Travel Start: COSTA RICA */}\n                    <div className=\"row col-md-12\">\n                    <label htmlFor=\"travel_start_costa_rica\"><strong>Travel Start:</strong> Costa Rica</label><br />\n                      <DatePicker className=\"form-control\" id=\"travel_start_costa_rica\" selected={this.state.travel_start_costa_rica} onChange={this.travelStartCostaRicaHandler} />\n                    </div>\n\n                    {/* This row is for Travel Start: FLORIDA */}\n                    <div className=\"row col-md-12\">\n                    <label htmlFor=\"travel_start_florida\"><strong>Travel Start:</strong> Florida</label><br />\n                      <DatePicker className=\"form-control\" id=\"travel_start_florida\" selected={this.state.travel_start_others} readOnly />\n                    </div>\n\n                    {/* This row is for Travel Start: ALL OTHER MARKET */}\n                    <div className=\"row col-md-12\">\n                      <label htmlFor=\"travel_start_others\"><strong>Travel Start:</strong> Other Markets</label><br />\n                      <DatePicker className=\"form-control\" id=\"travel_start_others\" selected={this.state.travel_start_others} onChange={this.travelStartOthersHandler} />\n                    </div>\n\n                    {/* This row is for Proposed Hawaii Dates */}\n                    <div className=\"row col-md-12\">\n\n                      <div className=\"col-md-12 remove-padding\">\n                          <h6 className=\"proposed-headline\"><strong>Proposed Dates:</strong> Hawaii</h6>\n                      </div>\n                      <div className=\"col-md-5 remove-padding\">\n                          <DatePicker className=\"form-control\" selected={this.state.proposed_start_hawaii} onChange={this.proposedStartDateHawaiiHandler} />\n                      </div>\n\n                      <div className=\"col-md-2 text-center\">\n                          <h6 className=\"\">to</h6>\n                      </div>\n\n                      <div className=\"col-md-5 remove-padding\">\n                          <DatePicker className=\"form-control\" selected={this.state.proposed_end_hawaii} onChange={this.proposedEndDateHawaiiHandler} />\n                      </div>\n\n                    </div>\n\n\n                </div>\n\n\n\n                {/* COMPLETED TRAVEL BY INPUTS */}\n                <div className=\"form-group col-md-3\">\n                    {/* This row is for Complete Travel By: Alaska to/from Hawaii */}\n                    <div className=\"row col-md-12\">\n                      <label htmlFor=\"travel_end_alaska_to_from_hawaii\"><strong>Completed Travel By:</strong> Alaska to/from Hawaii</label><br />\n                      <DatePicker className=\"form-control\" id=\"travel_end_alaska_to_from_hawaii\" selected={this.state.travel_end_alaska_to_from_hawaii} onChange={this.travelEndAlaskaToFromHawaiiDateHandler} />\n                    </div>\n\n                    {/* This row is for Complete Travel By: HAWAII */}\n                    <div className=\"row col-md-12\">\n                      <label htmlFor=\"travel_end_hawaii\"><strong>Completed Travel By:</strong> Hawaii</label><br />\n                      <DatePicker className=\"form-control\" id=\"travel_end_hawaii\" selected={this.state.travel_end_hawaii} onChange={this.travelEndHawaiiHandler} />\n                    </div>\n\n                    {/* This row is for Complete Travel By: MEXICO */}\n                    <div className=\"row col-md-12\">\n                    <label htmlFor=\"travel_end_mexico\"><strong>Completed Travel By:</strong> Mexico</label><br />\n                      <DatePicker className=\"form-control\" id=\"travel_end_mexico\" selected={this.state.travel_end_mexico} onChange={this.travelEndMexicoHandler} />\n                    </div>\n\n                    {/* This row is for Complete Travel By: COSTA RICA */}\n                    <div className=\"row col-md-12\">\n                    <label htmlFor=\"travel_end_costa_rica\"><strong>Completed Travel By:</strong> Costa Rica</label><br />\n                      <DatePicker className=\"form-control\" id=\"travel_end_costa_rica\" selected={this.state.travel_end_costa_rica} onChange={this.travelEndCostaRicaHandler} />\n                    </div>\n\n                    {/* This row is for Complete Travel By: FLORIDA */}\n                    <div className=\"row col-md-12\">\n                    <label htmlFor=\"travel_end_florida\"><strong>Completed Travel By:</strong> Florida</label><br />\n                      <DatePicker className=\"form-control\" id=\"travel_end_florida\" selected={this.state.travel_end_others} readOnly />\n                    </div>\n\n                    {/* This row is for Complete Travel By: ALL OTHER MARKET */}\n                    <div className=\"row col-md-12\">\n                    <label htmlFor=\"travel_end_others\"><strong>Completed Travel By:</strong> Other Markets</label><br />\n                      <DatePicker className=\"form-control\" id=\"travel_end_others\" selected={this.state.travel_end_others} onChange={this.travelEndOthersHandler} />\n                    </div>\n\n\n                    {/* This row is for Proposed Others Dates */}\n                    <div className=\"row col-md-12\">\n                        <div className=\"col-md-12 remove-padding\">\n                          <h6 className=\"proposed-headline\"><strong>Proposed Dates:</strong> Others</h6>\n                        </div>\n\n                        <div className=\"col-md-5 remove-padding\">\n                          <DatePicker className=\"form-control\" selected={this.state.proposed_start_others} onChange={this.proposedStartDateOthersHandler} />\n                        </div>\n\n                        <div className=\"col-md-2 text-center\">\n                          <h6 className=\"\">to</h6>\n                        </div>\n\n                        <div className=\"col-md-5 remove-padding\">\n                          <DatePicker className=\"form-control\" selected={this.state.proposed_end_others} onChange={this.proposedEndDateOthersHandler} />\n                        </div>\n                    </div>\n\n                </div>\n\n\n\n                {/* DAY/TIME AVAILABILITY INPUTS */}\n                <div className=\"form-group col-md-3\">\n                    {/* This row is for Days Availability: Alaska to/from Hawaii */}\n                    <div className=\"row col-md-12\">\n                      <label htmlFor=\"days_availability_alaska_to_from_hawaii\"><strong>Days Availability:</strong> Alaska to/from Hawaii</label><br />\n                      <input type=\"text\" className=\"form-control\" id=\"days_availability_alaska_to_from_hawaii\" value = {this.state.days_availability_hawaii} readOnly />\n                    </div>\n\n                    {/* This row is for Days Availability: HAWAII */}\n                    <div className=\"row col-md-12\">\n                      <label htmlFor=\"days_availability_hawaii\"><strong>Days Availability:</strong> Hawaii</label><br />\n                      <input type=\"text\" className=\"form-control\" id=\"days_availability_hawaii\" value = {this.state.days_availability_hawaii} onChange={this.daysAvailabilityHawaiiHandler} />\n                    </div>\n\n                    {/* This row is for Days Availability: MEXICO */}\n                    <div className=\"row col-md-12\">\n                      <label htmlFor=\"days_availability_mexico\"><strong>Days Availability:</strong> Mexico</label><br />\n                      <input type=\"text\" className=\"form-control\" id=\"days_availability_mexico\" value = {this.state.days_availability_mexico} onChange={this.daysAvailabilityMexicoHandler} />\n                    </div>\n\n                    {/* This row is for Days Availability: COSTA RICA */}\n                    <div className=\"row col-md-12\">\n                      <label htmlFor=\"days_availability_costa_rica\"><strong>Days Availability:</strong> Costa Rica</label><br />\n                      <input type=\"text\" className=\"form-control\" id=\"days_availability_costa_rica\" value = {this.state.days_availability_costa_rica} onChange={this.daysAvailabilityCostaRicaHandler} />\n                    </div>\n\n                    {/* This row is for Days Availability: TO FLORIDA */}\n                    <div className=\"row col-md-12\">\n                      <label htmlFor=\"days_availability_to_florida\"><strong>Days Availability:</strong> To Florida</label><br />\n                      <input type=\"text\" className=\"form-control\" id=\"days_availability_to_florida\" value = {this.state.days_availability_to_florida} onChange={this.daysAvailabilityToFloridaHandler}/>\n                    </div>\n\n                    {/* This row is for Days Availability: FROM FLORIDA */}\n                    <div className=\"row col-md-12\">\n                      <label htmlFor=\"days_availability_from_florida\"><strong>Days Availability:</strong> From Florida</label><br />\n                      <input type=\"text\" className=\"form-control\" id=\"days_availability_from_florida\" value = {this.state.days_availability_from_florida} onChange={this.daysAvailabilityFromFloridaHandler} />\n                    </div>\n\n                    {/* This row is for Days Availability: ALL OTHER MARKET */}\n                    <div className=\"row col-md-12\">\n                      <label htmlFor=\"days_availability_others\"><strong>Days Availability:</strong> Other Markets</label><br />\n                      <input type=\"text\" className=\"form-control\" id=\"days_availability_others\" value = {this.state.days_availability_others} onChange={this.daysAvailabilityOthersHandler} />\n                    </div>\n                </div>\n              {/* End of 1st Form ROW */}\n              </div>\n\n\n\n              {/* CLUB 49 Information ROW */}\n              <div className=\"form-row club49-information\">\n                  <div className=\"row col-md-12\">\n                      <h3 className=\"information-headline\">Club 49:</h3>\n                  </div>\n                  <div className=\"form-group col-md-3\">\n                      <div className=\"row col-md-12 individual-club49\">\n                        <div className=\"col-md-12 remove-padding\">\n                          <h6 className=\"club49-headline black-color\"><strong>Travel From:</strong> To U.S.</h6>\n                        </div>\n                        <div className=\"col-md-12 remove-padding\">\n                        <DatePicker className=\"form-control\" selected={this.state.travel_from_to_us} onChange={this.travelFromToUSHandler} />\n                        </div>\n                      </div>\n                  </div>\n\n                  <div className=\"form-group col-md-3\">\n                      <div className=\"row col-md-12 individual-club49\">\n                        <div className=\"col-md-12 remove-padding\">\n                          <h6 className=\"club49-headline black-color\"><strong>Travel By:</strong> To U.S.</h6>\n                        </div>\n                        <div className=\"col-md-12 remove-padding\">\n                        <DatePicker className=\"form-control\" selected={this.state.travel_by_to_us} onChange={this.travelByToUSHandler} />\n                        </div>\n                      </div>\n                  </div>\n\n                  <div className=\"form-group col-md-6\">\n                      <div className=\"row col-md-12 individual-club49\">\n                        <div className=\"col-md-12 remove-padding\">\n                          <h6 className=\"club49-headline black-color\"><strong>Days Availability:</strong> To U.S.</h6>\n                        </div>\n                        <div className=\"col-md-12 remove-padding\">\n                        <input type=\"text\" className=\"form-control\" id=\"days_availability_to_us\" value = {this.state.days_availability_to_us} onChange={this.daysAvailabilityToUSHandler} />\n                        </div>\n                      </div>\n                  </div>\n\n                  <div className=\"form-group col-md-3\">\n                      <div className=\"row col-md-12 individual-club49\">\n                        <div className=\"col-md-12 remove-padding\">\n                          <h6 className=\"club49-headline black-color\"><strong>Travel From:</strong> Within Alaska</h6>\n                        </div>\n                        <div className=\"col-md-12 remove-padding\">\n                        <DatePicker className=\"form-control\" selected={this.state.travel_from_within_alaska} onChange={this.travelFromWithinAlaskaHandler} />\n                        </div>\n                      </div>\n                  </div>\n\n                  <div className=\"form-group col-md-3\">\n                      <div className=\"row col-md-12 individual-club49\">\n                        <div className=\"col-md-12 remove-padding\">\n                          <h6 className=\"club49-headline black-color\"><strong>Travel By:</strong> Within Alaska</h6>\n                        </div>\n                        <div className=\"col-md-12 remove-padding\">\n                        <DatePicker className=\"form-control\" selected={this.state.travel_by_within_alaska} onChange={this.travelByWithinAlaskaHandler} />\n                        </div>\n                      </div>\n                  </div>\n\n                  <div className=\"form-group col-md-6\">\n                      <div className=\"row col-md-12 individual-club49\">\n                        <div className=\"col-md-12 remove-padding\">\n                          <h6 className=\"club49-headline black-color\"><strong>Days Availability:</strong> Within Alaska</h6>\n                        </div>\n                        <div className=\"col-md-12 remove-padding\">\n                        <input type=\"text\" className=\"form-control\" id=\"days_availability_within_alaska\" value = {this.state.days_availability_within_alaska} onChange={this.daysAvailabilityWithinAlaskaHandler} />\n                        </div>\n                      </div>\n                  </div>\n\n              </div>\n\n\n\n\n\n\n\n              {/* Blackout Information ROW */}\n              <div className=\"form-row blackout-information\">\n                  <div className=\"row col-md-12\">\n                      <h3 className=\"information-headline\">Blackouts:</h3>\n                  </div>\n                  <div className=\"form-group col-md-4\">\n                      <div className=\"row col-md-12 individual-blackout\">\n                        <div className=\"col-md-12 remove-padding\">\n                          <h6 className=\"blackout-headline black-color\"><strong>Blackout Dates:</strong> Alaska to/from Hawaii</h6>\n                        </div>\n                        <div className=\"col-md-5 remove-padding\">\n                        <DatePicker className=\"form-control\" selected={this.state.blackout_start_alaska_to_from_hawaii} onChange={this.blackoutStartDateAlaskaToFromHawaiiHandler} />\n                        </div>\n                        <div className=\"col-md-2 text-center\">\n                          <h6 className=\"black-color\">to</h6>\n                        </div>\n                        <div className=\"col-md-5 remove-padding\">\n                          <DatePicker className=\"form-control\" selected={this.state.blackout_end_alaska_to_from_hawaii} onChange={this.blackoutEndDateAlaskaToFromHawaiiHandler} />\n                        </div>\n                      </div>\n                  </div>\n\n                  <div className=\"form-group col-md-4\">\n                      <div className=\"row col-md-12 individual-blackout\">\n                        <div className=\"col-md-12 remove-padding\">\n                          <h6 className=\"blackout-headline black-color\"><strong>Blackout Dates:</strong> To Hawaii</h6>\n                        </div>\n                        <div className=\"col-md-5 remove-padding\">\n                        <DatePicker className=\"form-control\" selected={this.state.blackout_start_to_hawaii} onChange={this.blackoutStartDateToHawaiiHandler} />\n                        </div>\n                        <div className=\"col-md-2 text-center\">\n                          <h6 className=\"black-color\">to</h6>\n                        </div>\n                        <div className=\"col-md-5 remove-padding\">\n                          <DatePicker className=\"form-control\" selected={this.state.blackout_end_to_hawaii} onChange={this.blackoutEndDateToHawaiiHandler} />\n                        </div>\n                      </div>\n                  </div>\n\n                  <div className=\"form-group col-md-4\">\n                      <div className=\"row col-md-12 individual-blackout\">\n                        <div className=\"col-md-12 remove-padding\">\n                          <h6 className=\"blackout-headline black-color\"><strong>Blackout Dates:</strong> From Hawaii</h6>\n                        </div>\n                        <div className=\"col-md-5 remove-padding\">\n                        <DatePicker className=\"form-control\" selected={this.state.blackout_start_from_hawaii} onChange={this.blackoutStartDateFromHawaiiHandler} />\n                        </div>\n                        <div className=\"col-md-2 text-center\">\n                          <h6 className=\"black-color\">to</h6>\n                        </div>\n                        <div className=\"col-md-5 remove-padding\">\n                          <DatePicker className=\"form-control\" selected={this.state.blackout_end_from_hawaii} onChange={this.blackoutEndDateFromHawaiiHandler} />\n                        </div>\n                      </div>\n                  </div>\n\n                  <div className=\"form-group col-md-4\">\n                      <div className=\"row col-md-12 individual-blackout\">\n                        <div className=\"col-md-12 remove-padding\">\n                          <h6 className=\"blackout-headline black-color\"><strong>Blackout Dates:</strong> Mexico</h6>\n                        </div>\n                        <div className=\"col-md-5 remove-padding\">\n                        <DatePicker className=\"form-control\" selected={this.state.blackout_start_mexico} onChange={this.blackoutStartDateMexicoHandler} />\n                        </div>\n                        <div className=\"col-md-2 text-center\">\n                          <h6 className=\"black-color\">to</h6>\n                        </div>\n                        <div className=\"col-md-5 remove-padding\">\n                          <DatePicker className=\"form-control\" selected={this.state.blackout_end_mexico} onChange={this.blackoutEndDateMexicoHandler} />\n                        </div>\n                      </div>\n                  </div>\n                  <div className=\"form-group col-md-4\">\n                      <div className=\"row col-md-12 individual-blackout\">\n                        <div className=\"col-md-12 remove-padding\">\n                          <h6 className=\"blackout-headline black-color\"><strong>Blackout Dates:</strong> Costa Rica</h6>\n                        </div>\n                        <div className=\"col-md-5 remove-padding\">\n                        <DatePicker className=\"form-control\" selected={this.state.blackout_start_costa_rica} onChange={this.blackoutStartDateCostaRicaHandler} />\n                        </div>\n                        <div className=\"col-md-2 text-center\">\n                          <h6 className=\"black-color\">to</h6>\n                        </div>\n                        <div className=\"col-md-5 remove-padding\">\n                          <DatePicker className=\"form-control\" selected={this.state.blackout_end_costa_rica} onChange={this.blackoutEndDateCostaRicaHandler} />\n                        </div>\n                      </div>\n                  </div>\n                  <div className=\"form-group col-md-4\">\n                      <div className=\"row col-md-12 individual-blackout\">\n                        <div className=\"col-md-12 remove-padding\">\n                          <h6 className=\"blackout-headline black-color\"><strong>Blackout Dates:</strong> Other Markets</h6>\n                        </div>\n                        <div className=\"col-md-5 remove-padding\">\n                        <DatePicker className=\"form-control\" selected={this.state.blackout_start_others} onChange={this.blackoutStartDateOthersHandler} />\n                        </div>\n                        <div className=\"col-md-2 text-center\">\n                          <h6 className=\"black-color\">to</h6>\n                        </div>\n                        <div className=\"col-md-5 remove-padding\">\n                          <DatePicker className=\"form-control\" selected={this.state.blackout_end_others} onChange={this.blackoutEndDateOthersHandler} />\n                        </div>\n                      </div>\n                  </div>\n\n              </div>\n\n\n              <div className=\"form-row sale-information\">\n                <div className=\"row col-md-12\">\n                  <div className=\"\">\n                      <h3 className=\"information-headline\">Exceptions:</h3>\n                  </div>\n                  <div className=\"form-group col-md-2 add-btn\">\n                    <button type=\"button\" className=\"btn btn-success add-exception\" onClick={this.handleAddException}>\n                          <i className=\"fa fa-plus\"></i> Add Exception\n                      </button>\n                  </div>\n                </div>\n\n\n                {this.state.exceptions.map((item, idx) => (\n                  <div key={idx} className=\"row col-md-12 individual-exception\">\n                    <div className=\"form-group col-md-2\">\n                      <label htmlFor={`code_input_box_${idx + 1}`}><strong>Code Pair:</strong></label>\n                      <input type=\"text\" className=\"form-control\" id={`code_input_box_${idx + 1}`}  placeholder={`#${idx + 1}`} value={item.code} onChange={this.handleExceptionCodeChange(idx)} />\n                    </div>\n                    <div className=\"form-group col-md-5\">\n                      <label htmlFor={`travel_valid_input_box_${idx + 1}`}><strong>Travel Valid:</strong></label>\n                      <input type=\"text\" className=\"form-control\" id={`travel_valid_input_box_${idx + 1}`} placeholder={`Saturdays only`} value={item.travel_valid} onChange={this.handleExceptionTravelValid(idx)} />\n                    </div>\n                    <div className=\"form-group col-md-2\">\n                      <label htmlFor={`service_begins_datepicker_${idx + 1}`}><strong>Service Begins:</strong></label>\n                      <DatePicker className=\"form-control\" id={`service_begins_datepicker_${idx + 1}`} selected={item.service_begins} onChange={this.handleExceptionServiceBegins(idx)} />\n                    </div>\n                    <div className=\"form-group col-md-2\">\n                    <label htmlFor={`service_ends_datepicker_${idx + 1}`}><strong>Service Ends:</strong></label>\n                      <DatePicker className=\"form-control\" id={`service_ends_datepicker_${idx + 1}`} selected={item.service_ends} onChange={this.handleExceptionServiceEnds(idx)} />\n                    </div>\n\n                    {/* <button type=\"button\" onClick={this.handleRemoveException(idx)} className=\"small\">-</button> */}\n                    <div className=\"form-group col-md-1\">\n                      <button type=\"button\" className=\"btn btn-danger remove-exception\"  onClick={this.handleRemoveException(idx)}>\n                          <i className=\"fa fa-minus\"></i>\n                      </button>\n                    </div>\n                  </div>\n                ))}\n\n              </div>\n\n              <div className=\"form-row sale-information\">\n                {/* <div className=\"row col-md-12\">\n                  <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"inputPassword4\">First Input</label>\n                    <input type=\"text\" className=\"form-control\" id=\"inputAddress\" value = {this.state.firstinput} onChange = {this.updateFirstInput} />\n                  </div>\n                  <div className=\"form-group col-md-6\">\n                    <div className=\"form-check\">\n                      <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" />\n                      <label className=\"form-check-label\" htmlFor=\"gridCheck\">Check me out</label>\n                    </div>\n                  </div>\n                </div> */}\n                <div className=\"row col-md-12\">\n                  <div className=\"form-group col-md-9\">\n                    <button style={{marginTop:'15px'}} type=\"submit\" className=\"form-control btn btn-primary\" id=\"generate-xml\" >Generate XML</button>\n                  </div>\n\n                  <div className=\"form-group col-md-3\">\n                    <CSVLink\n                      data={saleDetailsHeaders}\n                      filename={this.state.mycsvsaledetailsfilename+\".csv\"}\n                      className=\"btn btn-warning csv-sale-details\"\n                      target=\"_blank\"\n                    ><i className=\"fa fa-download\"></i> CSV Sale Details</CSVLink>\n\n                    <CSVLink\n                      data={saleFareHeaders}\n                      filename={this.state.mycsvfilename+\".csv\"}\n                      className=\"btn btn-warning csv-sale-fares\"\n                      target=\"_blank\"\n                    ><i className=\"fa fa-download\"></i> CSV Fares</CSVLink>\n                  </div>\n\n                </div>\n              </div>\n            </form>\n\n            {/* XML OUTPUT LAYER */}\n            <div className=\"form-row output-information\">\n              <div className=\"row col-md-12\">\n                <div className=\"col-lg-10 col-md-8 col-sm-6\">\n                    <h3 className=\"\">Output:</h3>\n                </div>\n                <div className=\"form-group col-lg-1 col-md-2 col-sm-3\">\n                  <CopyToClipboard text={this.state.xmloutput}\n                  onCopy={() => this.setState({copied: true})}>\n                  <button type=\"submit\" className=\"btn btn-success copy-to-clipboard\"> <i className=\"fa fa-copy\"></i> Clipboard</button>\n                  </CopyToClipboard>\n                </div>\n                <div className=\"form-group col-lg-1 col-md-2 col-sm-3\">\n                  <button type=\"submit\" className=\"btn btn-warning copy-to-clipboard\" onClick={this.resetOutputVariable()}> <i className=\"fa fa-times\"></i> Clear</button>\n                </div>\n\n              </div>\n              <div className=\"row col-md-12\">\n                <div className=\"form-group col-md-12\">\n\n                    <pre id=\"pre-xml-output\">\n                          {this.state.xmloutput}\n                    </pre>\n                </div>\n              </div>\n            </div>\n\n\n\n\n\n\n              {/* CLEAN MY XML ROW */}\n              {/* <div className=\"form-row club49-information\">\n                  <div className=\"row col-md-12\">\n                      <h3 className=\"information-headline\">Clean My XML:</h3>\n                  </div>\n\n\n                  <div className=\"form-group col-md-12\">\n                      <div className=\"row col-md-12 individual-club49\">\n                          <div className=\"col-md-12\">\n                          <button type=\"submit\" className=\"btn btn-success clean-xml\" onClick={this.cleanFile()}> <i className=\"fa fa-brush\"></i> Clean XML</button>\n                          </div>\n\n                          <div className=\"row col-md-12\">\n                          <div className=\"form-group col-md-12\">\n\n                              <pre id=\"pre-xml-clean\">\n                                    {JSON.toString(this.state.clean)}\n                              </pre>\n                          </div>\n                        </div>\n                      </div>\n\n                  </div>\n\n\n\n              </div> */}\n\n\n\n\n\n\n\n\n        </div>\n\n\n\n\n\n\n      </div>\n      </div>\n    );\n\n\n\n\n  }\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}